// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.15.6
// source: terraform1.proto

package terraform1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceMode int32

const (
	ResourceMode_UNKNOWN ResourceMode = 0
	ResourceMode_MANAGED ResourceMode = 1
	ResourceMode_DATA    ResourceMode = 2
)

// Enum value maps for ResourceMode.
var (
	ResourceMode_name = map[int32]string{
		0: "UNKNOWN",
		1: "MANAGED",
		2: "DATA",
	}
	ResourceMode_value = map[string]int32{
		"UNKNOWN": 0,
		"MANAGED": 1,
		"DATA":    2,
	}
)

func (x ResourceMode) Enum() *ResourceMode {
	p := new(ResourceMode)
	*p = x
	return p
}

func (x ResourceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[0].Descriptor()
}

func (ResourceMode) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[0]
}

func (x ResourceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceMode.Descriptor instead.
func (ResourceMode) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{0}
}

type PlanMode int32

const (
	PlanMode_NORMAL       PlanMode = 0
	PlanMode_REFRESH_ONLY PlanMode = 1
	PlanMode_DESTROY      PlanMode = 2
)

// Enum value maps for PlanMode.
var (
	PlanMode_name = map[int32]string{
		0: "NORMAL",
		1: "REFRESH_ONLY",
		2: "DESTROY",
	}
	PlanMode_value = map[string]int32{
		"NORMAL":       0,
		"REFRESH_ONLY": 1,
		"DESTROY":      2,
	}
)

func (x PlanMode) Enum() *PlanMode {
	p := new(PlanMode)
	*p = x
	return p
}

func (x PlanMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanMode) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[1].Descriptor()
}

func (PlanMode) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[1]
}

func (x PlanMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlanMode.Descriptor instead.
func (PlanMode) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{1}
}

type ChangeType int32

const (
	ChangeType_NOOP   ChangeType = 0
	ChangeType_READ   ChangeType = 1
	ChangeType_CREATE ChangeType = 2
	ChangeType_UPDATE ChangeType = 3
	ChangeType_DELETE ChangeType = 4
)

// Enum value maps for ChangeType.
var (
	ChangeType_name = map[int32]string{
		0: "NOOP",
		1: "READ",
		2: "CREATE",
		3: "UPDATE",
		4: "DELETE",
	}
	ChangeType_value = map[string]int32{
		"NOOP":   0,
		"READ":   1,
		"CREATE": 2,
		"UPDATE": 3,
		"DELETE": 4,
	}
)

func (x ChangeType) Enum() *ChangeType {
	p := new(ChangeType)
	*p = x
	return p
}

func (x ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[2].Descriptor()
}

func (ChangeType) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[2]
}

func (x ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeType.Descriptor instead.
func (ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{2}
}

type BuildProviderPluginCache_Event_FetchComplete_AuthResult int32

const (
	BuildProviderPluginCache_Event_FetchComplete_UNKNOWN           BuildProviderPluginCache_Event_FetchComplete_AuthResult = 0
	BuildProviderPluginCache_Event_FetchComplete_VERIFIED_CHECKSUM BuildProviderPluginCache_Event_FetchComplete_AuthResult = 1
	BuildProviderPluginCache_Event_FetchComplete_OFFICIAL_SIGNED   BuildProviderPluginCache_Event_FetchComplete_AuthResult = 2
	BuildProviderPluginCache_Event_FetchComplete_PARTNER_SIGNED    BuildProviderPluginCache_Event_FetchComplete_AuthResult = 3
	BuildProviderPluginCache_Event_FetchComplete_SELF_SIGNED       BuildProviderPluginCache_Event_FetchComplete_AuthResult = 4
)

// Enum value maps for BuildProviderPluginCache_Event_FetchComplete_AuthResult.
var (
	BuildProviderPluginCache_Event_FetchComplete_AuthResult_name = map[int32]string{
		0: "UNKNOWN",
		1: "VERIFIED_CHECKSUM",
		2: "OFFICIAL_SIGNED",
		3: "PARTNER_SIGNED",
		4: "SELF_SIGNED",
	}
	BuildProviderPluginCache_Event_FetchComplete_AuthResult_value = map[string]int32{
		"UNKNOWN":           0,
		"VERIFIED_CHECKSUM": 1,
		"OFFICIAL_SIGNED":   2,
		"PARTNER_SIGNED":    3,
		"SELF_SIGNED":       4,
	}
)

func (x BuildProviderPluginCache_Event_FetchComplete_AuthResult) Enum() *BuildProviderPluginCache_Event_FetchComplete_AuthResult {
	p := new(BuildProviderPluginCache_Event_FetchComplete_AuthResult)
	*p = x
	return p
}

func (x BuildProviderPluginCache_Event_FetchComplete_AuthResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildProviderPluginCache_Event_FetchComplete_AuthResult) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[3].Descriptor()
}

func (BuildProviderPluginCache_Event_FetchComplete_AuthResult) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[3]
}

func (x BuildProviderPluginCache_Event_FetchComplete_AuthResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_FetchComplete_AuthResult.Descriptor instead.
func (BuildProviderPluginCache_Event_FetchComplete_AuthResult) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 5, 0}
}

type FindStackConfigurationComponents_Instances int32

const (
	FindStackConfigurationComponents_SINGLE   FindStackConfigurationComponents_Instances = 0
	FindStackConfigurationComponents_COUNT    FindStackConfigurationComponents_Instances = 1
	FindStackConfigurationComponents_FOR_EACH FindStackConfigurationComponents_Instances = 2
)

// Enum value maps for FindStackConfigurationComponents_Instances.
var (
	FindStackConfigurationComponents_Instances_name = map[int32]string{
		0: "SINGLE",
		1: "COUNT",
		2: "FOR_EACH",
	}
	FindStackConfigurationComponents_Instances_value = map[string]int32{
		"SINGLE":   0,
		"COUNT":    1,
		"FOR_EACH": 2,
	}
)

func (x FindStackConfigurationComponents_Instances) Enum() *FindStackConfigurationComponents_Instances {
	p := new(FindStackConfigurationComponents_Instances)
	*p = x
	return p
}

func (x FindStackConfigurationComponents_Instances) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FindStackConfigurationComponents_Instances) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[4].Descriptor()
}

func (FindStackConfigurationComponents_Instances) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[4]
}

func (x FindStackConfigurationComponents_Instances) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FindStackConfigurationComponents_Instances.Descriptor instead.
func (FindStackConfigurationComponents_Instances) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19, 0}
}

type Diagnostic_Severity int32

const (
	Diagnostic_INVALID Diagnostic_Severity = 0
	Diagnostic_ERROR   Diagnostic_Severity = 1
	Diagnostic_WARNING Diagnostic_Severity = 2
)

// Enum value maps for Diagnostic_Severity.
var (
	Diagnostic_Severity_name = map[int32]string{
		0: "INVALID",
		1: "ERROR",
		2: "WARNING",
	}
	Diagnostic_Severity_value = map[string]int32{
		"INVALID": 0,
		"ERROR":   1,
		"WARNING": 2,
	}
)

func (x Diagnostic_Severity) Enum() *Diagnostic_Severity {
	p := new(Diagnostic_Severity)
	*p = x
	return p
}

func (x Diagnostic_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Diagnostic_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[5].Descriptor()
}

func (Diagnostic_Severity) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[5]
}

func (x Diagnostic_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Diagnostic_Severity.Descriptor instead.
func (Diagnostic_Severity) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{32, 0}
}

type Schema_NestedBlock_NestingMode int32

const (
	Schema_NestedBlock_INVALID Schema_NestedBlock_NestingMode = 0
	Schema_NestedBlock_SINGLE  Schema_NestedBlock_NestingMode = 1
	Schema_NestedBlock_LIST    Schema_NestedBlock_NestingMode = 2
	Schema_NestedBlock_SET     Schema_NestedBlock_NestingMode = 3
	Schema_NestedBlock_MAP     Schema_NestedBlock_NestingMode = 4
	Schema_NestedBlock_GROUP   Schema_NestedBlock_NestingMode = 5
)

// Enum value maps for Schema_NestedBlock_NestingMode.
var (
	Schema_NestedBlock_NestingMode_name = map[int32]string{
		0: "INVALID",
		1: "SINGLE",
		2: "LIST",
		3: "SET",
		4: "MAP",
		5: "GROUP",
	}
	Schema_NestedBlock_NestingMode_value = map[string]int32{
		"INVALID": 0,
		"SINGLE":  1,
		"LIST":    2,
		"SET":     3,
		"MAP":     4,
		"GROUP":   5,
	}
)

func (x Schema_NestedBlock_NestingMode) Enum() *Schema_NestedBlock_NestingMode {
	p := new(Schema_NestedBlock_NestingMode)
	*p = x
	return p
}

func (x Schema_NestedBlock_NestingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schema_NestedBlock_NestingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[6].Descriptor()
}

func (Schema_NestedBlock_NestingMode) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[6]
}

func (x Schema_NestedBlock_NestingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Schema_NestedBlock_NestingMode.Descriptor instead.
func (Schema_NestedBlock_NestingMode) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 2, 0}
}

type Schema_Object_NestingMode int32

const (
	Schema_Object_INVALID Schema_Object_NestingMode = 0
	Schema_Object_SINGLE  Schema_Object_NestingMode = 1
	Schema_Object_LIST    Schema_Object_NestingMode = 2
	Schema_Object_SET     Schema_Object_NestingMode = 3
	Schema_Object_MAP     Schema_Object_NestingMode = 4
)

// Enum value maps for Schema_Object_NestingMode.
var (
	Schema_Object_NestingMode_name = map[int32]string{
		0: "INVALID",
		1: "SINGLE",
		2: "LIST",
		3: "SET",
		4: "MAP",
	}
	Schema_Object_NestingMode_value = map[string]int32{
		"INVALID": 0,
		"SINGLE":  1,
		"LIST":    2,
		"SET":     3,
		"MAP":     4,
	}
)

func (x Schema_Object_NestingMode) Enum() *Schema_Object_NestingMode {
	p := new(Schema_Object_NestingMode)
	*p = x
	return p
}

func (x Schema_Object_NestingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schema_Object_NestingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[7].Descriptor()
}

func (Schema_Object_NestingMode) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[7]
}

func (x Schema_Object_NestingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Schema_Object_NestingMode.Descriptor instead.
func (Schema_Object_NestingMode) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 3, 0}
}

type Schema_DocString_Format int32

const (
	Schema_DocString_PLAIN    Schema_DocString_Format = 0
	Schema_DocString_MARKDOWN Schema_DocString_Format = 1
)

// Enum value maps for Schema_DocString_Format.
var (
	Schema_DocString_Format_name = map[int32]string{
		0: "PLAIN",
		1: "MARKDOWN",
	}
	Schema_DocString_Format_value = map[string]int32{
		"PLAIN":    0,
		"MARKDOWN": 1,
	}
)

func (x Schema_DocString_Format) Enum() *Schema_DocString_Format {
	p := new(Schema_DocString_Format)
	*p = x
	return p
}

func (x Schema_DocString_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schema_DocString_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[8].Descriptor()
}

func (Schema_DocString_Format) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[8]
}

func (x Schema_DocString_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Schema_DocString_Format.Descriptor instead.
func (Schema_DocString_Format) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 4, 0}
}

type ComponentInstanceStatus_Status int32

const (
	ComponentInstanceStatus_INVALID  ComponentInstanceStatus_Status = 0
	ComponentInstanceStatus_PENDING  ComponentInstanceStatus_Status = 1
	ComponentInstanceStatus_PLANNING ComponentInstanceStatus_Status = 2
	ComponentInstanceStatus_PLANNED  ComponentInstanceStatus_Status = 3
	ComponentInstanceStatus_APPLYING ComponentInstanceStatus_Status = 4
	ComponentInstanceStatus_APPLIED  ComponentInstanceStatus_Status = 5
	ComponentInstanceStatus_ERRORED  ComponentInstanceStatus_Status = 6
)

// Enum value maps for ComponentInstanceStatus_Status.
var (
	ComponentInstanceStatus_Status_name = map[int32]string{
		0: "INVALID",
		1: "PENDING",
		2: "PLANNING",
		3: "PLANNED",
		4: "APPLYING",
		5: "APPLIED",
		6: "ERRORED",
	}
	ComponentInstanceStatus_Status_value = map[string]int32{
		"INVALID":  0,
		"PENDING":  1,
		"PLANNING": 2,
		"PLANNED":  3,
		"APPLYING": 4,
		"APPLIED":  5,
		"ERRORED":  6,
	}
)

func (x ComponentInstanceStatus_Status) Enum() *ComponentInstanceStatus_Status {
	p := new(ComponentInstanceStatus_Status)
	*p = x
	return p
}

func (x ComponentInstanceStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentInstanceStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[9].Descriptor()
}

func (ComponentInstanceStatus_Status) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[9]
}

func (x ComponentInstanceStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentInstanceStatus_Status.Descriptor instead.
func (ComponentInstanceStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{36, 0}
}

type ResourceInstanceStatus_Status int32

const (
	ResourceInstanceStatus_INVALID    ResourceInstanceStatus_Status = 0
	ResourceInstanceStatus_PENDING    ResourceInstanceStatus_Status = 1
	ResourceInstanceStatus_REFRESHING ResourceInstanceStatus_Status = 2
	ResourceInstanceStatus_REFRESHED  ResourceInstanceStatus_Status = 3
	ResourceInstanceStatus_PLANNING   ResourceInstanceStatus_Status = 4
	ResourceInstanceStatus_PLANNED    ResourceInstanceStatus_Status = 5
	ResourceInstanceStatus_APPLYING   ResourceInstanceStatus_Status = 6
	ResourceInstanceStatus_APPLIED    ResourceInstanceStatus_Status = 7
	ResourceInstanceStatus_ERRORED    ResourceInstanceStatus_Status = 8
)

// Enum value maps for ResourceInstanceStatus_Status.
var (
	ResourceInstanceStatus_Status_name = map[int32]string{
		0: "INVALID",
		1: "PENDING",
		2: "REFRESHING",
		3: "REFRESHED",
		4: "PLANNING",
		5: "PLANNED",
		6: "APPLYING",
		7: "APPLIED",
		8: "ERRORED",
	}
	ResourceInstanceStatus_Status_value = map[string]int32{
		"INVALID":    0,
		"PENDING":    1,
		"REFRESHING": 2,
		"REFRESHED":  3,
		"PLANNING":   4,
		"PLANNED":    5,
		"APPLYING":   6,
		"APPLIED":    7,
		"ERRORED":    8,
	}
)

func (x ResourceInstanceStatus_Status) Enum() *ResourceInstanceStatus_Status {
	p := new(ResourceInstanceStatus_Status)
	*p = x
	return p
}

func (x ResourceInstanceStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceInstanceStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[10].Descriptor()
}

func (ResourceInstanceStatus_Status) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[10]
}

func (x ResourceInstanceStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceInstanceStatus_Status.Descriptor instead.
func (ResourceInstanceStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{37, 0}
}

type ProvisionerStatus_Status int32

const (
	ProvisionerStatus_INVALID      ProvisionerStatus_Status = 0
	ProvisionerStatus_PROVISIONING ProvisionerStatus_Status = 1
	ProvisionerStatus_PROVISIONED  ProvisionerStatus_Status = 2
	ProvisionerStatus_ERRORED      ProvisionerStatus_Status = 3
)

// Enum value maps for ProvisionerStatus_Status.
var (
	ProvisionerStatus_Status_name = map[int32]string{
		0: "INVALID",
		1: "PROVISIONING",
		2: "PROVISIONED",
		3: "ERRORED",
	}
	ProvisionerStatus_Status_value = map[string]int32{
		"INVALID":      0,
		"PROVISIONING": 1,
		"PROVISIONED":  2,
		"ERRORED":      3,
	}
)

func (x ProvisionerStatus_Status) Enum() *ProvisionerStatus_Status {
	p := new(ProvisionerStatus_Status)
	*p = x
	return p
}

func (x ProvisionerStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvisionerStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_terraform1_proto_enumTypes[11].Descriptor()
}

func (ProvisionerStatus_Status) Type() protoreflect.EnumType {
	return &file_terraform1_proto_enumTypes[11]
}

func (x ProvisionerStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvisionerStatus_Status.Descriptor instead.
func (ProvisionerStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{39, 0}
}

type Handshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{0}
}

// The capabilities that the client wishes to advertise to the server during
// handshake.
type ClientCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientCapabilities) Reset() {
	*x = ClientCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCapabilities) ProtoMessage() {}

func (x *ClientCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCapabilities.ProtoReflect.Descriptor instead.
func (*ClientCapabilities) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{1}
}

// The capabilities that the server wishes to advertise to the client during
// handshake. Fields in this message can also be used to acknowledge and
// confirm support for client capabilities advertised in ClientCapabilities,
// in situations where the client must vary its behavior based on the server's
// level of support.
type ServerCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerCapabilities) Reset() {
	*x = ServerCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities) ProtoMessage() {}

func (x *ServerCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities.ProtoReflect.Descriptor instead.
func (*ServerCapabilities) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{2}
}

type OpenSourceBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenSourceBundle) Reset() {
	*x = OpenSourceBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSourceBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSourceBundle) ProtoMessage() {}

func (x *OpenSourceBundle) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSourceBundle.ProtoReflect.Descriptor instead.
func (*OpenSourceBundle) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{3}
}

type CloseSourceBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseSourceBundle) Reset() {
	*x = CloseSourceBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSourceBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSourceBundle) ProtoMessage() {}

func (x *CloseSourceBundle) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSourceBundle.ProtoReflect.Descriptor instead.
func (*CloseSourceBundle) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{4}
}

type OpenDependencyLockFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenDependencyLockFile) Reset() {
	*x = OpenDependencyLockFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDependencyLockFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDependencyLockFile) ProtoMessage() {}

func (x *OpenDependencyLockFile) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDependencyLockFile.ProtoReflect.Descriptor instead.
func (*OpenDependencyLockFile) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{5}
}

type CreateDependencyLocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateDependencyLocks) Reset() {
	*x = CreateDependencyLocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDependencyLocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDependencyLocks) ProtoMessage() {}

func (x *CreateDependencyLocks) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDependencyLocks.ProtoReflect.Descriptor instead.
func (*CreateDependencyLocks) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{6}
}

type CloseDependencyLocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseDependencyLocks) Reset() {
	*x = CloseDependencyLocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDependencyLocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDependencyLocks) ProtoMessage() {}

func (x *CloseDependencyLocks) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDependencyLocks.ProtoReflect.Descriptor instead.
func (*CloseDependencyLocks) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{7}
}

type GetLockedProviderDependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLockedProviderDependencies) Reset() {
	*x = GetLockedProviderDependencies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockedProviderDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockedProviderDependencies) ProtoMessage() {}

func (x *GetLockedProviderDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockedProviderDependencies.ProtoReflect.Descriptor instead.
func (*GetLockedProviderDependencies) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{8}
}

type BuildProviderPluginCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BuildProviderPluginCache) Reset() {
	*x = BuildProviderPluginCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache) ProtoMessage() {}

func (x *BuildProviderPluginCache) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9}
}

type OpenProviderPluginCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenProviderPluginCache) Reset() {
	*x = OpenProviderPluginCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenProviderPluginCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenProviderPluginCache) ProtoMessage() {}

func (x *OpenProviderPluginCache) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenProviderPluginCache.ProtoReflect.Descriptor instead.
func (*OpenProviderPluginCache) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{10}
}

type CloseProviderPluginCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseProviderPluginCache) Reset() {
	*x = CloseProviderPluginCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseProviderPluginCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseProviderPluginCache) ProtoMessage() {}

func (x *CloseProviderPluginCache) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseProviderPluginCache.ProtoReflect.Descriptor instead.
func (*CloseProviderPluginCache) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{11}
}

type GetCachedProviders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCachedProviders) Reset() {
	*x = GetCachedProviders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCachedProviders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCachedProviders) ProtoMessage() {}

func (x *GetCachedProviders) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCachedProviders.ProtoReflect.Descriptor instead.
func (*GetCachedProviders) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{12}
}

type GetBuiltInProviders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBuiltInProviders) Reset() {
	*x = GetBuiltInProviders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuiltInProviders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuiltInProviders) ProtoMessage() {}

func (x *GetBuiltInProviders) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuiltInProviders.ProtoReflect.Descriptor instead.
func (*GetBuiltInProviders) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{13}
}

type GetProviderSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProviderSchema) Reset() {
	*x = GetProviderSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderSchema) ProtoMessage() {}

func (x *GetProviderSchema) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderSchema.ProtoReflect.Descriptor instead.
func (*GetProviderSchema) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{14}
}

// Represents a selected or available version of a provider, from either a
// dependency lock object (selected) or a provider cache object (available).
//
// This message type corresponds in meaning with a single "provider" block in a
// dependency lock file, but not all messages of this type directly represent
// such a physical block.
type ProviderPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the provider using the canonical form of the provider
	// source address syntax.
	SourceAddr string `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	// The version number of this provider package. Unset for (and only for)
	// built-in providers; callers may use the set-ness of this field to
	// distinguish installable vs. built-in providers without having to
	// parse the source address syntax.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// The hash strings that Terraform knows about for this provider package,
	// using the same "scheme:hash" syntax used in Terraform's dependency
	// lock file format.
	//
	// For a message representing a "selected" provider package this enumerates
	// all of the checksums that were previously loaded from a dependency
	// lock file or otherwise inserted into a dependency locks object, which
	// are usually (but not necessarily) originally obtained from the
	// provider's origin registry and then cached in the lock file.
	//
	// For a message representing an "available" provider package this
	// describes only the actual package on disk, and so will typically
	// include only the subset of the checksums from the corresponding
	// "selected" package that are relevant to the current platform where
	// Terraform Core is running.
	Hashes []string `protobuf:"bytes,3,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *ProviderPackage) Reset() {
	*x = ProviderPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderPackage) ProtoMessage() {}

func (x *ProviderPackage) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderPackage.ProtoReflect.Descriptor instead.
func (*ProviderPackage) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{15}
}

func (x *ProviderPackage) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *ProviderPackage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProviderPackage) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

// ProviderSchema describes the full schema for a particular provider.
type ProviderSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderConfig       *Schema            `protobuf:"bytes,1,opt,name=provider_config,json=providerConfig,proto3" json:"provider_config,omitempty"`
	ManagedResourceTypes map[string]*Schema `protobuf:"bytes,2,rep,name=managed_resource_types,json=managedResourceTypes,proto3" json:"managed_resource_types,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DataResourceTypes    map[string]*Schema `protobuf:"bytes,3,rep,name=data_resource_types,json=dataResourceTypes,proto3" json:"data_resource_types,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProviderSchema) Reset() {
	*x = ProviderSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderSchema) ProtoMessage() {}

func (x *ProviderSchema) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderSchema.ProtoReflect.Descriptor instead.
func (*ProviderSchema) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{16}
}

func (x *ProviderSchema) GetProviderConfig() *Schema {
	if x != nil {
		return x.ProviderConfig
	}
	return nil
}

func (x *ProviderSchema) GetManagedResourceTypes() map[string]*Schema {
	if x != nil {
		return x.ManagedResourceTypes
	}
	return nil
}

func (x *ProviderSchema) GetDataResourceTypes() map[string]*Schema {
	if x != nil {
		return x.DataResourceTypes
	}
	return nil
}

type OpenStackConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenStackConfiguration) Reset() {
	*x = OpenStackConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenStackConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenStackConfiguration) ProtoMessage() {}

func (x *OpenStackConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenStackConfiguration.ProtoReflect.Descriptor instead.
func (*OpenStackConfiguration) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{17}
}

type CloseStackConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseStackConfiguration) Reset() {
	*x = CloseStackConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseStackConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseStackConfiguration) ProtoMessage() {}

func (x *CloseStackConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseStackConfiguration.ProtoReflect.Descriptor instead.
func (*CloseStackConfiguration) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{18}
}

type FindStackConfigurationComponents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindStackConfigurationComponents) Reset() {
	*x = FindStackConfigurationComponents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationComponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationComponents) ProtoMessage() {}

func (x *FindStackConfigurationComponents) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationComponents.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationComponents) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19}
}

type FindStackConfigurationProviders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindStackConfigurationProviders) Reset() {
	*x = FindStackConfigurationProviders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationProviders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationProviders) ProtoMessage() {}

func (x *FindStackConfigurationProviders) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationProviders.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationProviders) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{20}
}

type PlanStackChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlanStackChanges) Reset() {
	*x = PlanStackChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanStackChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanStackChanges) ProtoMessage() {}

func (x *PlanStackChanges) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanStackChanges.ProtoReflect.Descriptor instead.
func (*PlanStackChanges) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{21}
}

type ApplyStackChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplyStackChanges) Reset() {
	*x = ApplyStackChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyStackChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyStackChanges) ProtoMessage() {}

func (x *ApplyStackChanges) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyStackChanges.ProtoReflect.Descriptor instead.
func (*ApplyStackChanges) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{22}
}

// Represents dynamically-typed data from within the Terraform language.
// Typically only one of the available serialization formats will be populated,
// depending on what serializations are appropriate for a particular context
// and what capabilities the client and the server negotiated during Handshake.
type DynamicValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgpack   []byte           `protobuf:"bytes,1,opt,name=msgpack,proto3" json:"msgpack,omitempty"`     // The default serialization format
	Sensitive []*AttributePath `protobuf:"bytes,2,rep,name=sensitive,proto3" json:"sensitive,omitempty"` // Paths to any sensitive-marked values.
}

func (x *DynamicValue) Reset() {
	*x = DynamicValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicValue) ProtoMessage() {}

func (x *DynamicValue) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicValue.ProtoReflect.Descriptor instead.
func (*DynamicValue) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{23}
}

func (x *DynamicValue) GetMsgpack() []byte {
	if x != nil {
		return x.Msgpack
	}
	return nil
}

func (x *DynamicValue) GetSensitive() []*AttributePath {
	if x != nil {
		return x.Sensitive
	}
	return nil
}

// Represents a change of some object from one dynamic value to another.
type DynamicValueChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old *DynamicValue `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New *DynamicValue `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *DynamicValueChange) Reset() {
	*x = DynamicValueChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicValueChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicValueChange) ProtoMessage() {}

func (x *DynamicValueChange) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicValueChange.ProtoReflect.Descriptor instead.
func (*DynamicValueChange) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{24}
}

func (x *DynamicValueChange) GetOld() *DynamicValue {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *DynamicValueChange) GetNew() *DynamicValue {
	if x != nil {
		return x.New
	}
	return nil
}

// Represents a DynamicValue accompanied by a source location where it was
// presumably defined, for values that originated in configuration files for
// situations such as returning error messages.
type DynamicValueWithSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       *DynamicValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	SourceRange *SourceRange  `protobuf:"bytes,2,opt,name=source_range,json=sourceRange,proto3" json:"source_range,omitempty"`
}

func (x *DynamicValueWithSource) Reset() {
	*x = DynamicValueWithSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicValueWithSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicValueWithSource) ProtoMessage() {}

func (x *DynamicValueWithSource) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicValueWithSource.ProtoReflect.Descriptor instead.
func (*DynamicValueWithSource) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{25}
}

func (x *DynamicValueWithSource) GetValue() *DynamicValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DynamicValueWithSource) GetSourceRange() *SourceRange {
	if x != nil {
		return x.SourceRange
	}
	return nil
}

type AttributePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps []*AttributePath_Step `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *AttributePath) Reset() {
	*x = AttributePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributePath) ProtoMessage() {}

func (x *AttributePath) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributePath.ProtoReflect.Descriptor instead.
func (*AttributePath) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{26}
}

func (x *AttributePath) GetSteps() []*AttributePath_Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

// Represents the address of a specific component instance within a stack.
type ComponentInstanceInStackAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the static component that this is an instance of.
	ComponentAddr string `protobuf:"bytes,1,opt,name=component_addr,json=componentAddr,proto3" json:"component_addr,omitempty"`
	// The address of the instance that's being announced. For
	// multi-instance components this could have any combination of
	// instance keys on the component itself or instance keys on any
	// of the containing embedded stacks.
	ComponentInstanceAddr string `protobuf:"bytes,2,opt,name=component_instance_addr,json=componentInstanceAddr,proto3" json:"component_instance_addr,omitempty"`
}

func (x *ComponentInstanceInStackAddr) Reset() {
	*x = ComponentInstanceInStackAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentInstanceInStackAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentInstanceInStackAddr) ProtoMessage() {}

func (x *ComponentInstanceInStackAddr) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentInstanceInStackAddr.ProtoReflect.Descriptor instead.
func (*ComponentInstanceInStackAddr) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{27}
}

func (x *ComponentInstanceInStackAddr) GetComponentAddr() string {
	if x != nil {
		return x.ComponentAddr
	}
	return ""
}

func (x *ComponentInstanceInStackAddr) GetComponentInstanceAddr() string {
	if x != nil {
		return x.ComponentInstanceAddr
	}
	return ""
}

// Represents the address of a specific resource instance inside a specific
// component instance within the containing stack.
type ResourceInstanceInStackAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique address of the component instance that this resource instance
	// belongs to. This is comparable with
	ComponentInstanceAddr string `protobuf:"bytes,1,opt,name=component_instance_addr,json=componentInstanceAddr,proto3" json:"component_instance_addr,omitempty"`
	// Unique address of the resource instance within the given component
	// instance. Each component instance has a separate namespace of
	// resource instance addresses, so callers must take both fields together
	// to produce a key that's unique throughout the entire plan.
	ResourceInstanceAddr string `protobuf:"bytes,2,opt,name=resource_instance_addr,json=resourceInstanceAddr,proto3" json:"resource_instance_addr,omitempty"`
}

func (x *ResourceInstanceInStackAddr) Reset() {
	*x = ResourceInstanceInStackAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInstanceInStackAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInstanceInStackAddr) ProtoMessage() {}

func (x *ResourceInstanceInStackAddr) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInstanceInStackAddr.ProtoReflect.Descriptor instead.
func (*ResourceInstanceInStackAddr) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{28}
}

func (x *ResourceInstanceInStackAddr) GetComponentInstanceAddr() string {
	if x != nil {
		return x.ComponentInstanceAddr
	}
	return ""
}

func (x *ResourceInstanceInStackAddr) GetResourceInstanceAddr() string {
	if x != nil {
		return x.ResourceInstanceAddr
	}
	return ""
}

// A source address in the same form as it would appear in a Terraform
// configuration: a source string combined with an optional version constraint
// string, where the latter is valid only for registry module addresses.
//
// This is not used for "final" source addresses that have already been reduced
// to an exact version selection. For those we just directly encode the string
// representation of the final address, including a version number if necessary.
type SourceAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source   string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Versions string `protobuf:"bytes,2,opt,name=versions,proto3" json:"versions,omitempty"`
}

func (x *SourceAddress) Reset() {
	*x = SourceAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceAddress) ProtoMessage() {}

func (x *SourceAddress) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceAddress.ProtoReflect.Descriptor instead.
func (*SourceAddress) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{29}
}

func (x *SourceAddress) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SourceAddress) GetVersions() string {
	if x != nil {
		return x.Versions
	}
	return ""
}

// Describes one item in a stack plan. The overall plan is the concatentation
// of all messages of this type emitted as events during the plan; splitting
// this information over multiple messages just allows the individual events
// to double as progress notifications for an interactive UI.
type PlannedChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Terraform Core's internal representation(s) of this change. Callers
	// must provide the messages in this field, if any, verbatim to the
	// ApplyStackChanges RPC in order to apply this change, and must not
	// attempt to decode or analyze the contents because they are subject
	// to change in future versions of Terraform Core.
	//
	// This might be unpopulated if this message represents only information
	// for the caller and Terraform Core doesn't actually need to recall this
	// information during the apply step. Callers must append each raw item
	// to the raw plan in the order specified, and provide them all together
	// in the same order to ApplyStackChanges.
	Raw []*anypb.Any `protobuf:"bytes,1,rep,name=raw,proto3" json:"raw,omitempty"`
	// Caller-facing description of this change, to use for presenting
	// information to end-users in the UI and for other subsystems such as
	// imposing policy rules on the resulting plan.
	//
	// If none of these fields are populated in a given event then the
	// raw messages in "raw" represent private information that has no
	// external-facing equivalent. Callers must still retain the raw messages
	// to provide to a subsequent ApplyStackChanges RPC.
	//
	// DO NOT attempt to use this to surgically filter particular changes
	// from a larger plan. Although external descriptions often match with
	// the raw representations in field "raw", that is not guaranteed and
	// Terraform Core assumes that it will always be provided with the full
	// set of raw messages -- in the same order they were emitted -- during
	// the apply step. For example, some raw messages might omit information
	// that is implied by earlier raw messages and would therefore be
	// incomplete if isolated.
	//
	// Types that are assignable to Description:
	//
	//	*PlannedChange_ComponentInstancePlanned
	//	*PlannedChange_ResourceInstanceDrifted
	//	*PlannedChange_ResourceInstancePlanned
	//	*PlannedChange_OutputValuePlanned
	//	*PlannedChange_PlanApplyable
	Description isPlannedChange_Description `protobuf_oneof:"description"`
}

func (x *PlannedChange) Reset() {
	*x = PlannedChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedChange) ProtoMessage() {}

func (x *PlannedChange) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedChange.ProtoReflect.Descriptor instead.
func (*PlannedChange) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{30}
}

func (x *PlannedChange) GetRaw() []*anypb.Any {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (m *PlannedChange) GetDescription() isPlannedChange_Description {
	if m != nil {
		return m.Description
	}
	return nil
}

func (x *PlannedChange) GetComponentInstancePlanned() *PlannedChange_ComponentInstance {
	if x, ok := x.GetDescription().(*PlannedChange_ComponentInstancePlanned); ok {
		return x.ComponentInstancePlanned
	}
	return nil
}

func (x *PlannedChange) GetResourceInstanceDrifted() *PlannedChange_ResourceInstance {
	if x, ok := x.GetDescription().(*PlannedChange_ResourceInstanceDrifted); ok {
		return x.ResourceInstanceDrifted
	}
	return nil
}

func (x *PlannedChange) GetResourceInstancePlanned() *PlannedChange_ResourceInstance {
	if x, ok := x.GetDescription().(*PlannedChange_ResourceInstancePlanned); ok {
		return x.ResourceInstancePlanned
	}
	return nil
}

func (x *PlannedChange) GetOutputValuePlanned() *PlannedChange_OutputValue {
	if x, ok := x.GetDescription().(*PlannedChange_OutputValuePlanned); ok {
		return x.OutputValuePlanned
	}
	return nil
}

func (x *PlannedChange) GetPlanApplyable() bool {
	if x, ok := x.GetDescription().(*PlannedChange_PlanApplyable); ok {
		return x.PlanApplyable
	}
	return false
}

type isPlannedChange_Description interface {
	isPlannedChange_Description()
}

type PlannedChange_ComponentInstancePlanned struct {
	ComponentInstancePlanned *PlannedChange_ComponentInstance `protobuf:"bytes,2,opt,name=component_instance_planned,json=componentInstancePlanned,proto3,oneof"`
}

type PlannedChange_ResourceInstanceDrifted struct {
	ResourceInstanceDrifted *PlannedChange_ResourceInstance `protobuf:"bytes,3,opt,name=resource_instance_drifted,json=resourceInstanceDrifted,proto3,oneof"`
}

type PlannedChange_ResourceInstancePlanned struct {
	ResourceInstancePlanned *PlannedChange_ResourceInstance `protobuf:"bytes,4,opt,name=resource_instance_planned,json=resourceInstancePlanned,proto3,oneof"`
}

type PlannedChange_OutputValuePlanned struct {
	OutputValuePlanned *PlannedChange_OutputValue `protobuf:"bytes,5,opt,name=output_value_planned,json=outputValuePlanned,proto3,oneof"`
}

type PlannedChange_PlanApplyable struct {
	PlanApplyable bool `protobuf:"varint,6,opt,name=plan_applyable,json=planApplyable,proto3,oneof"`
}

func (*PlannedChange_ComponentInstancePlanned) isPlannedChange_Description() {}

func (*PlannedChange_ResourceInstanceDrifted) isPlannedChange_Description() {}

func (*PlannedChange_ResourceInstancePlanned) isPlannedChange_Description() {}

func (*PlannedChange_OutputValuePlanned) isPlannedChange_Description() {}

func (*PlannedChange_PlanApplyable) isPlannedChange_Description() {}

// Describes a change made during a Stacks.ApplyStackChanges call.
//
// All of the events of this type taken together represent a sort of "patch"
// modifying the two data structures that the caller must maintain: the
// raw state map, and the description map. Callers must apply these changes
// in the order of the emission of the messages and then retain the entirety
// of both data structures to populate fields in the next PlanStackChanges call.
type AppliedChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Terraform Core's internal representation of the change, presented as
	// a sequence of modifications to the raw state data structure.
	//
	// For each element, in order:
	//   - If both key and value are set and the key matches an element
	//     already in the raw state map, the new value replaces the existing one.
	//   - If both key and value are set but the key does not match an
	//     element in the raw state map, this represents inserting a new element
	//     into the map.
	//   - If key is set and value is not, this represents removing any existing
	//     element from the raw state map which has the given key, or a no-op
	//     if no such element exists.
	//   - No other situation is legal.
	//
	// This sequence can potentially be zero-length if a particular event only
	// has a external-facing "description" component and no raw equivalent. In
	// that case the raw state map is unmodified.
	Raw []*AppliedChange_RawChange `protobuf:"bytes,1,rep,name=raw,proto3" json:"raw,omitempty"`
	// Caller-facing description of this change, to use for presenting
	// information to end-users in the UI and for other subsystems such as
	// billing.
	//
	// Callers are expected to maintain a map of description objects that
	// gets updated piecemeal by messages in this field. Callers must treat
	// the keys as entirely opaque and thus treat the resulting data structure
	// as if it were an unsorted set of ChangeDescription objects; the keys
	// exist only to allow patching the data structure over time.
	//
	// For each element, in order:
	//   - If both key and description are set and the key matches an element
	//     from the previous apply's description map, the new value replaces
	//     the existing one.
	//   - If both key and value are set but the key does not match an
	//     element in the previous apply's description map, this represents
	//     inserting a new element into the map.
	//   - If key is set and description is not, this represents removing any
	//     existing element from the previous apply's description map which has
	//     the given key, or a no-op if no such element exists.
	//   - If a description field is set that the caller doesn't understand,
	//     the caller should still write it to the updated description map
	//     but ignore it in further processing.
	//   - No other situation is legal.
	//
	// Callers MUST preserve the verbatim description message in the
	// description map, even if it contains fields that are not present in
	// the caller's current protobuf stubs. In other words, callers must use
	// a protocol buffers implementation that is able to preserve unknown
	// fields and store them so that future versions of the caller might
	// use an updated set of stubs to interact with the previously-stored
	// description.
	//
	// DO NOT attempt to use this to surgically filter particular raw state
	// updates from a larger plan. Although external descriptions often match
	// with the raw representations in field "raw", that is not guaranteed and
	// Terraform Core assumes that it will always be provided with the full
	// raw state map during the next plan step.
	Descriptions []*AppliedChange_ChangeDescription `protobuf:"bytes,2,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
}

func (x *AppliedChange) Reset() {
	*x = AppliedChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedChange) ProtoMessage() {}

func (x *AppliedChange) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedChange.ProtoReflect.Descriptor instead.
func (*AppliedChange) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{31}
}

func (x *AppliedChange) GetRaw() []*AppliedChange_RawChange {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *AppliedChange) GetDescriptions() []*AppliedChange_ChangeDescription {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

type Diagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity Diagnostic_Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=terraform1.Diagnostic_Severity" json:"severity,omitempty"`
	Summary  string              `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Detail   string              `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	Subject  *SourceRange        `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Context  *SourceRange        `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{32}
}

func (x *Diagnostic) GetSeverity() Diagnostic_Severity {
	if x != nil {
		return x.Severity
	}
	return Diagnostic_INVALID
}

func (x *Diagnostic) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Diagnostic) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *Diagnostic) GetSubject() *SourceRange {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Diagnostic) GetContext() *SourceRange {
	if x != nil {
		return x.Context
	}
	return nil
}

type SourceRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string     `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Start      *SourcePos `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End        *SourcePos `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *SourceRange) Reset() {
	*x = SourceRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRange) ProtoMessage() {}

func (x *SourceRange) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRange.ProtoReflect.Descriptor instead.
func (*SourceRange) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{33}
}

func (x *SourceRange) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *SourceRange) GetStart() *SourcePos {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *SourceRange) GetEnd() *SourcePos {
	if x != nil {
		return x.End
	}
	return nil
}

type SourcePos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Byte   int64 `protobuf:"varint,1,opt,name=byte,proto3" json:"byte,omitempty"`
	Line   int64 `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Column int64 `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *SourcePos) Reset() {
	*x = SourcePos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourcePos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcePos) ProtoMessage() {}

func (x *SourcePos) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcePos.ProtoReflect.Descriptor instead.
func (*SourcePos) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{34}
}

func (x *SourcePos) GetByte() int64 {
	if x != nil {
		return x.Byte
	}
	return 0
}

func (x *SourcePos) GetLine() int64 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *SourcePos) GetColumn() int64 {
	if x != nil {
		return x.Column
	}
	return 0
}

// Schema describes a schema for an instance of a particular object, such as
// a resource type or a provider's overall configuration.
type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block is the top level configuration block for this schema.
	Block *Schema_Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35}
}

func (x *Schema) GetBlock() *Schema_Block {
	if x != nil {
		return x.Block
	}
	return nil
}

// ComponentInstanceStatus describes the current status of a component instance
// undergoing a plan or apply operation.
type ComponentInstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   *ComponentInstanceInStackAddr  `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status ComponentInstanceStatus_Status `protobuf:"varint,2,opt,name=status,proto3,enum=terraform1.ComponentInstanceStatus_Status" json:"status,omitempty"`
}

func (x *ComponentInstanceStatus) Reset() {
	*x = ComponentInstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentInstanceStatus) ProtoMessage() {}

func (x *ComponentInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentInstanceStatus.ProtoReflect.Descriptor instead.
func (*ComponentInstanceStatus) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{36}
}

func (x *ComponentInstanceStatus) GetAddr() *ComponentInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ComponentInstanceStatus) GetStatus() ComponentInstanceStatus_Status {
	if x != nil {
		return x.Status
	}
	return ComponentInstanceStatus_INVALID
}

// ComponentInstanceStatus describes the current status of a resource instance
// undergoing a plan or apply operation.
type ResourceInstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   *ResourceInstanceInStackAddr  `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status ResourceInstanceStatus_Status `protobuf:"varint,2,opt,name=status,proto3,enum=terraform1.ResourceInstanceStatus_Status" json:"status,omitempty"`
}

func (x *ResourceInstanceStatus) Reset() {
	*x = ResourceInstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInstanceStatus) ProtoMessage() {}

func (x *ResourceInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInstanceStatus.ProtoReflect.Descriptor instead.
func (*ResourceInstanceStatus) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{37}
}

func (x *ResourceInstanceStatus) GetAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ResourceInstanceStatus) GetStatus() ResourceInstanceStatus_Status {
	if x != nil {
		return x.Status
	}
	return ResourceInstanceStatus_INVALID
}

// ResourceInstancePlannedChange describes summary information about a planned
// change for a resource instance. This does not include the full object change,
// which is described in PlannedChange.ResourceChange. The information in this
// message is intended for the event stream and need not include the instance's
// full object values.
type ResourceInstancePlannedChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     *ResourceInstanceInStackAddr            `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Actions  []ChangeType                            `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=terraform1.ChangeType" json:"actions,omitempty"`
	Moved    *ResourceInstancePlannedChange_Moved    `protobuf:"bytes,3,opt,name=moved,proto3" json:"moved,omitempty"`
	Imported *ResourceInstancePlannedChange_Imported `protobuf:"bytes,4,opt,name=imported,proto3" json:"imported,omitempty"`
}

func (x *ResourceInstancePlannedChange) Reset() {
	*x = ResourceInstancePlannedChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInstancePlannedChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInstancePlannedChange) ProtoMessage() {}

func (x *ResourceInstancePlannedChange) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInstancePlannedChange.ProtoReflect.Descriptor instead.
func (*ResourceInstancePlannedChange) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{38}
}

func (x *ResourceInstancePlannedChange) GetAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ResourceInstancePlannedChange) GetActions() []ChangeType {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ResourceInstancePlannedChange) GetMoved() *ResourceInstancePlannedChange_Moved {
	if x != nil {
		return x.Moved
	}
	return nil
}

func (x *ResourceInstancePlannedChange) GetImported() *ResourceInstancePlannedChange_Imported {
	if x != nil {
		return x.Imported
	}
	return nil
}

// ProvisionerStatus represents the progress of a given provisioner during its
// resource instance's apply operation.
type ProvisionerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   *ResourceInstanceInStackAddr `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Name   string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status *ProvisionerStatus           `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProvisionerStatus) Reset() {
	*x = ProvisionerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionerStatus) ProtoMessage() {}

func (x *ProvisionerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionerStatus.ProtoReflect.Descriptor instead.
func (*ProvisionerStatus) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{39}
}

func (x *ProvisionerStatus) GetAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ProvisionerStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProvisionerStatus) GetStatus() *ProvisionerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ProvisionerOutput represents recorded output data emitted by a provisioner
// during a resource instance's apply operation.
type ProvisionerOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   *ResourceInstanceInStackAddr `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Name   string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Output string                       `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *ProvisionerOutput) Reset() {
	*x = ProvisionerOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionerOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionerOutput) ProtoMessage() {}

func (x *ProvisionerOutput) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionerOutput.ProtoReflect.Descriptor instead.
func (*ProvisionerOutput) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{40}
}

func (x *ProvisionerOutput) GetAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ProvisionerOutput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProvisionerOutput) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type Handshake_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities *ClientCapabilities `protobuf:"bytes,1,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *Handshake_Request) Reset() {
	*x = Handshake_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake_Request) ProtoMessage() {}

func (x *Handshake_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake_Request.ProtoReflect.Descriptor instead.
func (*Handshake_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Handshake_Request) GetCapabilities() *ClientCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type Handshake_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities *ServerCapabilities `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *Handshake_Response) Reset() {
	*x = Handshake_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake_Response) ProtoMessage() {}

func (x *Handshake_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake_Response.ProtoReflect.Descriptor instead.
func (*Handshake_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Handshake_Response) GetCapabilities() *ServerCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type OpenSourceBundle_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalPath string `protobuf:"bytes,1,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
}

func (x *OpenSourceBundle_Request) Reset() {
	*x = OpenSourceBundle_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSourceBundle_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSourceBundle_Request) ProtoMessage() {}

func (x *OpenSourceBundle_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSourceBundle_Request.ProtoReflect.Descriptor instead.
func (*OpenSourceBundle_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{3, 0}
}

func (x *OpenSourceBundle_Request) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

type OpenSourceBundle_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceBundleHandle int64 `protobuf:"varint,1,opt,name=source_bundle_handle,json=sourceBundleHandle,proto3" json:"source_bundle_handle,omitempty"`
}

func (x *OpenSourceBundle_Response) Reset() {
	*x = OpenSourceBundle_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSourceBundle_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSourceBundle_Response) ProtoMessage() {}

func (x *OpenSourceBundle_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSourceBundle_Response.ProtoReflect.Descriptor instead.
func (*OpenSourceBundle_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{3, 1}
}

func (x *OpenSourceBundle_Response) GetSourceBundleHandle() int64 {
	if x != nil {
		return x.SourceBundleHandle
	}
	return 0
}

type CloseSourceBundle_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceBundleHandle int64 `protobuf:"varint,1,opt,name=source_bundle_handle,json=sourceBundleHandle,proto3" json:"source_bundle_handle,omitempty"`
}

func (x *CloseSourceBundle_Request) Reset() {
	*x = CloseSourceBundle_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSourceBundle_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSourceBundle_Request) ProtoMessage() {}

func (x *CloseSourceBundle_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSourceBundle_Request.ProtoReflect.Descriptor instead.
func (*CloseSourceBundle_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CloseSourceBundle_Request) GetSourceBundleHandle() int64 {
	if x != nil {
		return x.SourceBundleHandle
	}
	return 0
}

type CloseSourceBundle_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseSourceBundle_Response) Reset() {
	*x = CloseSourceBundle_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSourceBundle_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSourceBundle_Response) ProtoMessage() {}

func (x *CloseSourceBundle_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSourceBundle_Response.ProtoReflect.Descriptor instead.
func (*CloseSourceBundle_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{4, 1}
}

type OpenDependencyLockFile_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceBundleHandle int64          `protobuf:"varint,1,opt,name=source_bundle_handle,json=sourceBundleHandle,proto3" json:"source_bundle_handle,omitempty"`
	SourceAddress      *SourceAddress `protobuf:"bytes,2,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
}

func (x *OpenDependencyLockFile_Request) Reset() {
	*x = OpenDependencyLockFile_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDependencyLockFile_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDependencyLockFile_Request) ProtoMessage() {}

func (x *OpenDependencyLockFile_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDependencyLockFile_Request.ProtoReflect.Descriptor instead.
func (*OpenDependencyLockFile_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{5, 0}
}

func (x *OpenDependencyLockFile_Request) GetSourceBundleHandle() int64 {
	if x != nil {
		return x.SourceBundleHandle
	}
	return 0
}

func (x *OpenDependencyLockFile_Request) GetSourceAddress() *SourceAddress {
	if x != nil {
		return x.SourceAddress
	}
	return nil
}

type OpenDependencyLockFile_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DependencyLocksHandle int64         `protobuf:"varint,1,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
	Diagnostics           []*Diagnostic `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
}

func (x *OpenDependencyLockFile_Response) Reset() {
	*x = OpenDependencyLockFile_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDependencyLockFile_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDependencyLockFile_Response) ProtoMessage() {}

func (x *OpenDependencyLockFile_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDependencyLockFile_Response.ProtoReflect.Descriptor instead.
func (*OpenDependencyLockFile_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{5, 1}
}

func (x *OpenDependencyLockFile_Response) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

func (x *OpenDependencyLockFile_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type CreateDependencyLocks_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The provider selections to include in the locks object.
	//
	// A typical value would be the result of an earlier call to
	// GetLockedProviderDependencies on some other locks object,
	// e.g. if a caller needs to propagate a set of locks from one
	// Terraform Core RPC server to another.
	ProviderSelections []*ProviderPackage `protobuf:"bytes,1,rep,name=provider_selections,json=providerSelections,proto3" json:"provider_selections,omitempty"`
}

func (x *CreateDependencyLocks_Request) Reset() {
	*x = CreateDependencyLocks_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDependencyLocks_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDependencyLocks_Request) ProtoMessage() {}

func (x *CreateDependencyLocks_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDependencyLocks_Request.ProtoReflect.Descriptor instead.
func (*CreateDependencyLocks_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CreateDependencyLocks_Request) GetProviderSelections() []*ProviderPackage {
	if x != nil {
		return x.ProviderSelections
	}
	return nil
}

type CreateDependencyLocks_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DependencyLocksHandle int64 `protobuf:"varint,1,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
}

func (x *CreateDependencyLocks_Response) Reset() {
	*x = CreateDependencyLocks_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDependencyLocks_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDependencyLocks_Response) ProtoMessage() {}

func (x *CreateDependencyLocks_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDependencyLocks_Response.ProtoReflect.Descriptor instead.
func (*CreateDependencyLocks_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{6, 1}
}

func (x *CreateDependencyLocks_Response) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

type CloseDependencyLocks_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DependencyLocksHandle int64 `protobuf:"varint,1,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
}

func (x *CloseDependencyLocks_Request) Reset() {
	*x = CloseDependencyLocks_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDependencyLocks_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDependencyLocks_Request) ProtoMessage() {}

func (x *CloseDependencyLocks_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDependencyLocks_Request.ProtoReflect.Descriptor instead.
func (*CloseDependencyLocks_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CloseDependencyLocks_Request) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

type CloseDependencyLocks_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseDependencyLocks_Response) Reset() {
	*x = CloseDependencyLocks_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDependencyLocks_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDependencyLocks_Response) ProtoMessage() {}

func (x *CloseDependencyLocks_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDependencyLocks_Response.ProtoReflect.Descriptor instead.
func (*CloseDependencyLocks_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{7, 1}
}

type GetLockedProviderDependencies_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DependencyLocksHandle int64 `protobuf:"varint,1,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
}

func (x *GetLockedProviderDependencies_Request) Reset() {
	*x = GetLockedProviderDependencies_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockedProviderDependencies_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockedProviderDependencies_Request) ProtoMessage() {}

func (x *GetLockedProviderDependencies_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockedProviderDependencies_Request.ProtoReflect.Descriptor instead.
func (*GetLockedProviderDependencies_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetLockedProviderDependencies_Request) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

type GetLockedProviderDependencies_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedProviders []*ProviderPackage `protobuf:"bytes,1,rep,name=selected_providers,json=selectedProviders,proto3" json:"selected_providers,omitempty"`
}

func (x *GetLockedProviderDependencies_Response) Reset() {
	*x = GetLockedProviderDependencies_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLockedProviderDependencies_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockedProviderDependencies_Response) ProtoMessage() {}

func (x *GetLockedProviderDependencies_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockedProviderDependencies_Response.ProtoReflect.Descriptor instead.
func (*GetLockedProviderDependencies_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{8, 1}
}

func (x *GetLockedProviderDependencies_Response) GetSelectedProviders() []*ProviderPackage {
	if x != nil {
		return x.SelectedProviders
	}
	return nil
}

type BuildProviderPluginCache_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheDir              string                                            `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DependencyLocksHandle int64                                             `protobuf:"varint,2,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
	InstallationMethods   []*BuildProviderPluginCache_Request_InstallMethod `protobuf:"bytes,3,rep,name=installation_methods,json=installationMethods,proto3" json:"installation_methods,omitempty"`
	// If set, this populates the cache with plugins for a different
	// platform than the one the Terraform Core RPC server is running on.
	// If unset (empty) then the cache will be populated with packages
	// for the same platform as Terraform Core was built for, if available.
	//
	// If this is set to a different platform than the Terraform Core RPC
	// server's then the generated cache directory will appear empty to
	// other operations on this server.
	OverridePlatform string `protobuf:"bytes,4,opt,name=override_platform,json=overridePlatform,proto3" json:"override_platform,omitempty"`
}

func (x *BuildProviderPluginCache_Request) Reset() {
	*x = BuildProviderPluginCache_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Request) ProtoMessage() {}

func (x *BuildProviderPluginCache_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Request.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 0}
}

func (x *BuildProviderPluginCache_Request) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *BuildProviderPluginCache_Request) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

func (x *BuildProviderPluginCache_Request) GetInstallationMethods() []*BuildProviderPluginCache_Request_InstallMethod {
	if x != nil {
		return x.InstallationMethods
	}
	return nil
}

func (x *BuildProviderPluginCache_Request) GetOverridePlatform() string {
	if x != nil {
		return x.OverridePlatform
	}
	return ""
}

type BuildProviderPluginCache_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*BuildProviderPluginCache_Event_Pending_
	//	*BuildProviderPluginCache_Event_AlreadyInstalled
	//	*BuildProviderPluginCache_Event_BuiltIn
	//	*BuildProviderPluginCache_Event_QueryBegin
	//	*BuildProviderPluginCache_Event_QuerySuccess
	//	*BuildProviderPluginCache_Event_QueryWarnings
	//	*BuildProviderPluginCache_Event_FetchBegin_
	//	*BuildProviderPluginCache_Event_FetchComplete_
	//	*BuildProviderPluginCache_Event_Diagnostic
	Event isBuildProviderPluginCache_Event_Event `protobuf_oneof:"event"`
}

func (x *BuildProviderPluginCache_Event) Reset() {
	*x = BuildProviderPluginCache_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1}
}

func (m *BuildProviderPluginCache_Event) GetEvent() isBuildProviderPluginCache_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetPending() *BuildProviderPluginCache_Event_Pending {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_Pending_); ok {
		return x.Pending
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetAlreadyInstalled() *BuildProviderPluginCache_Event_ProviderVersion {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_AlreadyInstalled); ok {
		return x.AlreadyInstalled
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetBuiltIn() *BuildProviderPluginCache_Event_ProviderVersion {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_BuiltIn); ok {
		return x.BuiltIn
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetQueryBegin() *BuildProviderPluginCache_Event_ProviderConstraints {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_QueryBegin); ok {
		return x.QueryBegin
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetQuerySuccess() *BuildProviderPluginCache_Event_ProviderVersion {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_QuerySuccess); ok {
		return x.QuerySuccess
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetQueryWarnings() *BuildProviderPluginCache_Event_ProviderWarnings {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_QueryWarnings); ok {
		return x.QueryWarnings
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetFetchBegin() *BuildProviderPluginCache_Event_FetchBegin {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_FetchBegin_); ok {
		return x.FetchBegin
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetFetchComplete() *BuildProviderPluginCache_Event_FetchComplete {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_FetchComplete_); ok {
		return x.FetchComplete
	}
	return nil
}

func (x *BuildProviderPluginCache_Event) GetDiagnostic() *Diagnostic {
	if x, ok := x.GetEvent().(*BuildProviderPluginCache_Event_Diagnostic); ok {
		return x.Diagnostic
	}
	return nil
}

type isBuildProviderPluginCache_Event_Event interface {
	isBuildProviderPluginCache_Event_Event()
}

type BuildProviderPluginCache_Event_Pending_ struct {
	Pending *BuildProviderPluginCache_Event_Pending `protobuf:"bytes,1,opt,name=pending,proto3,oneof"`
}

type BuildProviderPluginCache_Event_AlreadyInstalled struct {
	AlreadyInstalled *BuildProviderPluginCache_Event_ProviderVersion `protobuf:"bytes,2,opt,name=already_installed,json=alreadyInstalled,proto3,oneof"`
}

type BuildProviderPluginCache_Event_BuiltIn struct {
	BuiltIn *BuildProviderPluginCache_Event_ProviderVersion `protobuf:"bytes,3,opt,name=built_in,json=builtIn,proto3,oneof"`
}

type BuildProviderPluginCache_Event_QueryBegin struct {
	QueryBegin *BuildProviderPluginCache_Event_ProviderConstraints `protobuf:"bytes,4,opt,name=query_begin,json=queryBegin,proto3,oneof"`
}

type BuildProviderPluginCache_Event_QuerySuccess struct {
	QuerySuccess *BuildProviderPluginCache_Event_ProviderVersion `protobuf:"bytes,5,opt,name=query_success,json=querySuccess,proto3,oneof"`
}

type BuildProviderPluginCache_Event_QueryWarnings struct {
	QueryWarnings *BuildProviderPluginCache_Event_ProviderWarnings `protobuf:"bytes,6,opt,name=query_warnings,json=queryWarnings,proto3,oneof"`
}

type BuildProviderPluginCache_Event_FetchBegin_ struct {
	FetchBegin *BuildProviderPluginCache_Event_FetchBegin `protobuf:"bytes,7,opt,name=fetch_begin,json=fetchBegin,proto3,oneof"`
}

type BuildProviderPluginCache_Event_FetchComplete_ struct {
	FetchComplete *BuildProviderPluginCache_Event_FetchComplete `protobuf:"bytes,8,opt,name=fetch_complete,json=fetchComplete,proto3,oneof"`
}

type BuildProviderPluginCache_Event_Diagnostic struct {
	Diagnostic *Diagnostic `protobuf:"bytes,9,opt,name=diagnostic,proto3,oneof"`
}

func (*BuildProviderPluginCache_Event_Pending_) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_AlreadyInstalled) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_BuiltIn) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_QueryBegin) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_QuerySuccess) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_QueryWarnings) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_FetchBegin_) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_FetchComplete_) isBuildProviderPluginCache_Event_Event() {}

func (*BuildProviderPluginCache_Event_Diagnostic) isBuildProviderPluginCache_Event_Event() {}

type BuildProviderPluginCache_Request_InstallMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*BuildProviderPluginCache_Request_InstallMethod_Direct
	//	*BuildProviderPluginCache_Request_InstallMethod_LocalMirrorDir
	//	*BuildProviderPluginCache_Request_InstallMethod_NetworkMirrorUrl
	Source  isBuildProviderPluginCache_Request_InstallMethod_Source `protobuf_oneof:"source"`
	Include []string                                                `protobuf:"bytes,4,rep,name=include,proto3" json:"include,omitempty"`
	Exclude []string                                                `protobuf:"bytes,5,rep,name=exclude,proto3" json:"exclude,omitempty"`
}

func (x *BuildProviderPluginCache_Request_InstallMethod) Reset() {
	*x = BuildProviderPluginCache_Request_InstallMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Request_InstallMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Request_InstallMethod) ProtoMessage() {}

func (x *BuildProviderPluginCache_Request_InstallMethod) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Request_InstallMethod.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Request_InstallMethod) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (m *BuildProviderPluginCache_Request_InstallMethod) GetSource() isBuildProviderPluginCache_Request_InstallMethod_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *BuildProviderPluginCache_Request_InstallMethod) GetDirect() bool {
	if x, ok := x.GetSource().(*BuildProviderPluginCache_Request_InstallMethod_Direct); ok {
		return x.Direct
	}
	return false
}

func (x *BuildProviderPluginCache_Request_InstallMethod) GetLocalMirrorDir() string {
	if x, ok := x.GetSource().(*BuildProviderPluginCache_Request_InstallMethod_LocalMirrorDir); ok {
		return x.LocalMirrorDir
	}
	return ""
}

func (x *BuildProviderPluginCache_Request_InstallMethod) GetNetworkMirrorUrl() string {
	if x, ok := x.GetSource().(*BuildProviderPluginCache_Request_InstallMethod_NetworkMirrorUrl); ok {
		return x.NetworkMirrorUrl
	}
	return ""
}

func (x *BuildProviderPluginCache_Request_InstallMethod) GetInclude() []string {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *BuildProviderPluginCache_Request_InstallMethod) GetExclude() []string {
	if x != nil {
		return x.Exclude
	}
	return nil
}

type isBuildProviderPluginCache_Request_InstallMethod_Source interface {
	isBuildProviderPluginCache_Request_InstallMethod_Source()
}

type BuildProviderPluginCache_Request_InstallMethod_Direct struct {
	Direct bool `protobuf:"varint,1,opt,name=direct,proto3,oneof"`
}

type BuildProviderPluginCache_Request_InstallMethod_LocalMirrorDir struct {
	LocalMirrorDir string `protobuf:"bytes,2,opt,name=local_mirror_dir,json=localMirrorDir,proto3,oneof"`
}

type BuildProviderPluginCache_Request_InstallMethod_NetworkMirrorUrl struct {
	NetworkMirrorUrl string `protobuf:"bytes,3,opt,name=network_mirror_url,json=networkMirrorUrl,proto3,oneof"`
}

func (*BuildProviderPluginCache_Request_InstallMethod_Direct) isBuildProviderPluginCache_Request_InstallMethod_Source() {
}

func (*BuildProviderPluginCache_Request_InstallMethod_LocalMirrorDir) isBuildProviderPluginCache_Request_InstallMethod_Source() {
}

func (*BuildProviderPluginCache_Request_InstallMethod_NetworkMirrorUrl) isBuildProviderPluginCache_Request_InstallMethod_Source() {
}

type BuildProviderPluginCache_Event_Pending struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expected []*BuildProviderPluginCache_Event_ProviderConstraints `protobuf:"bytes,1,rep,name=expected,proto3" json:"expected,omitempty"`
}

func (x *BuildProviderPluginCache_Event_Pending) Reset() {
	*x = BuildProviderPluginCache_Event_Pending{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event_Pending) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event_Pending) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event_Pending) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_Pending.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event_Pending) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 0}
}

func (x *BuildProviderPluginCache_Event_Pending) GetExpected() []*BuildProviderPluginCache_Event_ProviderConstraints {
	if x != nil {
		return x.Expected
	}
	return nil
}

type BuildProviderPluginCache_Event_ProviderConstraints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Versions   string `protobuf:"bytes,2,opt,name=versions,proto3" json:"versions,omitempty"`
}

func (x *BuildProviderPluginCache_Event_ProviderConstraints) Reset() {
	*x = BuildProviderPluginCache_Event_ProviderConstraints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event_ProviderConstraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event_ProviderConstraints) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event_ProviderConstraints) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_ProviderConstraints.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event_ProviderConstraints) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 1}
}

func (x *BuildProviderPluginCache_Event_ProviderConstraints) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *BuildProviderPluginCache_Event_ProviderConstraints) GetVersions() string {
	if x != nil {
		return x.Versions
	}
	return ""
}

type BuildProviderPluginCache_Event_ProviderVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Version    string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BuildProviderPluginCache_Event_ProviderVersion) Reset() {
	*x = BuildProviderPluginCache_Event_ProviderVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event_ProviderVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event_ProviderVersion) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event_ProviderVersion) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_ProviderVersion.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event_ProviderVersion) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 2}
}

func (x *BuildProviderPluginCache_Event_ProviderVersion) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *BuildProviderPluginCache_Event_ProviderVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type BuildProviderPluginCache_Event_ProviderWarnings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string   `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Warnings   []string `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *BuildProviderPluginCache_Event_ProviderWarnings) Reset() {
	*x = BuildProviderPluginCache_Event_ProviderWarnings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event_ProviderWarnings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event_ProviderWarnings) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event_ProviderWarnings) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_ProviderWarnings.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event_ProviderWarnings) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 3}
}

func (x *BuildProviderPluginCache_Event_ProviderWarnings) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *BuildProviderPluginCache_Event_ProviderWarnings) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type BuildProviderPluginCache_Event_FetchBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderVersion *BuildProviderPluginCache_Event_ProviderVersion `protobuf:"bytes,1,opt,name=provider_version,json=providerVersion,proto3" json:"provider_version,omitempty"`
	Location        string                                          `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *BuildProviderPluginCache_Event_FetchBegin) Reset() {
	*x = BuildProviderPluginCache_Event_FetchBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event_FetchBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event_FetchBegin) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event_FetchBegin) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_FetchBegin.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event_FetchBegin) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 4}
}

func (x *BuildProviderPluginCache_Event_FetchBegin) GetProviderVersion() *BuildProviderPluginCache_Event_ProviderVersion {
	if x != nil {
		return x.ProviderVersion
	}
	return nil
}

func (x *BuildProviderPluginCache_Event_FetchBegin) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type BuildProviderPluginCache_Event_FetchComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderVersion *BuildProviderPluginCache_Event_ProviderVersion         `protobuf:"bytes,1,opt,name=provider_version,json=providerVersion,proto3" json:"provider_version,omitempty"`
	AuthResult      BuildProviderPluginCache_Event_FetchComplete_AuthResult `protobuf:"varint,2,opt,name=auth_result,json=authResult,proto3,enum=terraform1.BuildProviderPluginCache_Event_FetchComplete_AuthResult" json:"auth_result,omitempty"`
	// If auth_result is one of the "_SIGNED" variants then this
	// might contain a UI-oriented identifier for the key that
	// signed the package. The exact format of this string is not
	// guaranteed; do not attempt to parse it or make automated
	// decisions based on it.
	KeyIdForDisplay string `protobuf:"bytes,3,opt,name=key_id_for_display,json=keyIdForDisplay,proto3" json:"key_id_for_display,omitempty"`
}

func (x *BuildProviderPluginCache_Event_FetchComplete) Reset() {
	*x = BuildProviderPluginCache_Event_FetchComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildProviderPluginCache_Event_FetchComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildProviderPluginCache_Event_FetchComplete) ProtoMessage() {}

func (x *BuildProviderPluginCache_Event_FetchComplete) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildProviderPluginCache_Event_FetchComplete.ProtoReflect.Descriptor instead.
func (*BuildProviderPluginCache_Event_FetchComplete) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{9, 1, 5}
}

func (x *BuildProviderPluginCache_Event_FetchComplete) GetProviderVersion() *BuildProviderPluginCache_Event_ProviderVersion {
	if x != nil {
		return x.ProviderVersion
	}
	return nil
}

func (x *BuildProviderPluginCache_Event_FetchComplete) GetAuthResult() BuildProviderPluginCache_Event_FetchComplete_AuthResult {
	if x != nil {
		return x.AuthResult
	}
	return BuildProviderPluginCache_Event_FetchComplete_UNKNOWN
}

func (x *BuildProviderPluginCache_Event_FetchComplete) GetKeyIdForDisplay() string {
	if x != nil {
		return x.KeyIdForDisplay
	}
	return ""
}

type OpenProviderPluginCache_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheDir string `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	// As with the field of the same name in BuildProviderPluginCache.Request.
	//
	// If this is set to anything other than this RPC server's native
	// platform then any operations that require executing the provider
	// plugin are likely to fail due to executable format errors or
	// similar. However, it's valid to use the returned handle with
	// GetCachedProviders, since it only analyzes the cache metadata
	// and doesn't actually run the plugins inside.
	OverridePlatform string `protobuf:"bytes,2,opt,name=override_platform,json=overridePlatform,proto3" json:"override_platform,omitempty"`
}

func (x *OpenProviderPluginCache_Request) Reset() {
	*x = OpenProviderPluginCache_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenProviderPluginCache_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenProviderPluginCache_Request) ProtoMessage() {}

func (x *OpenProviderPluginCache_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenProviderPluginCache_Request.ProtoReflect.Descriptor instead.
func (*OpenProviderPluginCache_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{10, 0}
}

func (x *OpenProviderPluginCache_Request) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *OpenProviderPluginCache_Request) GetOverridePlatform() string {
	if x != nil {
		return x.OverridePlatform
	}
	return ""
}

type OpenProviderPluginCache_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderCacheHandle int64 `protobuf:"varint,1,opt,name=provider_cache_handle,json=providerCacheHandle,proto3" json:"provider_cache_handle,omitempty"`
}

func (x *OpenProviderPluginCache_Response) Reset() {
	*x = OpenProviderPluginCache_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenProviderPluginCache_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenProviderPluginCache_Response) ProtoMessage() {}

func (x *OpenProviderPluginCache_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenProviderPluginCache_Response.ProtoReflect.Descriptor instead.
func (*OpenProviderPluginCache_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{10, 1}
}

func (x *OpenProviderPluginCache_Response) GetProviderCacheHandle() int64 {
	if x != nil {
		return x.ProviderCacheHandle
	}
	return 0
}

type CloseProviderPluginCache_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderCacheHandle int64 `protobuf:"varint,1,opt,name=provider_cache_handle,json=providerCacheHandle,proto3" json:"provider_cache_handle,omitempty"`
}

func (x *CloseProviderPluginCache_Request) Reset() {
	*x = CloseProviderPluginCache_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseProviderPluginCache_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseProviderPluginCache_Request) ProtoMessage() {}

func (x *CloseProviderPluginCache_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseProviderPluginCache_Request.ProtoReflect.Descriptor instead.
func (*CloseProviderPluginCache_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CloseProviderPluginCache_Request) GetProviderCacheHandle() int64 {
	if x != nil {
		return x.ProviderCacheHandle
	}
	return 0
}

type CloseProviderPluginCache_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseProviderPluginCache_Response) Reset() {
	*x = CloseProviderPluginCache_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseProviderPluginCache_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseProviderPluginCache_Response) ProtoMessage() {}

func (x *CloseProviderPluginCache_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseProviderPluginCache_Response.ProtoReflect.Descriptor instead.
func (*CloseProviderPluginCache_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{11, 1}
}

type GetCachedProviders_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderCacheHandle int64 `protobuf:"varint,1,opt,name=provider_cache_handle,json=providerCacheHandle,proto3" json:"provider_cache_handle,omitempty"`
}

func (x *GetCachedProviders_Request) Reset() {
	*x = GetCachedProviders_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCachedProviders_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCachedProviders_Request) ProtoMessage() {}

func (x *GetCachedProviders_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCachedProviders_Request.ProtoReflect.Descriptor instead.
func (*GetCachedProviders_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetCachedProviders_Request) GetProviderCacheHandle() int64 {
	if x != nil {
		return x.ProviderCacheHandle
	}
	return 0
}

type GetCachedProviders_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableProviders []*ProviderPackage `protobuf:"bytes,1,rep,name=available_providers,json=availableProviders,proto3" json:"available_providers,omitempty"`
}

func (x *GetCachedProviders_Response) Reset() {
	*x = GetCachedProviders_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCachedProviders_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCachedProviders_Response) ProtoMessage() {}

func (x *GetCachedProviders_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCachedProviders_Response.ProtoReflect.Descriptor instead.
func (*GetCachedProviders_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{12, 1}
}

func (x *GetCachedProviders_Response) GetAvailableProviders() []*ProviderPackage {
	if x != nil {
		return x.AvailableProviders
	}
	return nil
}

type GetBuiltInProviders_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBuiltInProviders_Request) Reset() {
	*x = GetBuiltInProviders_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuiltInProviders_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuiltInProviders_Request) ProtoMessage() {}

func (x *GetBuiltInProviders_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuiltInProviders_Request.ProtoReflect.Descriptor instead.
func (*GetBuiltInProviders_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{13, 0}
}

type GetBuiltInProviders_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The built-in providers that are compiled in to this Terraform Core
	// server.
	//
	// This uses ProviderPackage messages for consistency with the other
	// operations which list providers, but built-in providers do not
	// have version numbers nor hashes so those fields will always be
	// unset in the result.
	AvailableProviders []*ProviderPackage `protobuf:"bytes,1,rep,name=available_providers,json=availableProviders,proto3" json:"available_providers,omitempty"`
}

func (x *GetBuiltInProviders_Response) Reset() {
	*x = GetBuiltInProviders_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuiltInProviders_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuiltInProviders_Response) ProtoMessage() {}

func (x *GetBuiltInProviders_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuiltInProviders_Response.ProtoReflect.Descriptor instead.
func (*GetBuiltInProviders_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{13, 1}
}

func (x *GetBuiltInProviders_Response) GetAvailableProviders() []*ProviderPackage {
	if x != nil {
		return x.AvailableProviders
	}
	return nil
}

type GetProviderSchema_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the provider to retrieve schema for, using the
	// typical provider source address syntax.
	//
	// When requesting schema based on a ProviderPackage message, populate
	// this with its "source_addr" field.
	ProviderAddr string `protobuf:"bytes,1,opt,name=provider_addr,json=providerAddr,proto3" json:"provider_addr,omitempty"`
	// The version number of the given provider to retrieve the schema
	// of, which must have already been populated into the cache directory.
	//
	// Not supported for built-in providers because we can only access the
	// single "version" of the provider that's compiled into this Terraform
	// Core server, and so must be left unset or empty for those.
	//
	// When requesting schema based on a ProviderPackage message, populate
	// this with its "version" field.
	ProviderVersion string `protobuf:"bytes,2,opt,name=provider_version,json=providerVersion,proto3" json:"provider_version,omitempty"`
	// The handle for the previously-opened provider plugin cache to
	// load the provider plugin from.
	//
	// Optional for built-in providers, but can still be specified in that
	// case if desired so that callers can safely just send the handle they
	// have in all cases and be naive about which providers are and are
	// not built in.
	ProviderCacheHandle int64 `protobuf:"varint,3,opt,name=provider_cache_handle,json=providerCacheHandle,proto3" json:"provider_cache_handle,omitempty"`
}

func (x *GetProviderSchema_Request) Reset() {
	*x = GetProviderSchema_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderSchema_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderSchema_Request) ProtoMessage() {}

func (x *GetProviderSchema_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderSchema_Request.ProtoReflect.Descriptor instead.
func (*GetProviderSchema_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetProviderSchema_Request) GetProviderAddr() string {
	if x != nil {
		return x.ProviderAddr
	}
	return ""
}

func (x *GetProviderSchema_Request) GetProviderVersion() string {
	if x != nil {
		return x.ProviderVersion
	}
	return ""
}

func (x *GetProviderSchema_Request) GetProviderCacheHandle() int64 {
	if x != nil {
		return x.ProviderCacheHandle
	}
	return 0
}

type GetProviderSchema_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *ProviderSchema `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *GetProviderSchema_Response) Reset() {
	*x = GetProviderSchema_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderSchema_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderSchema_Response) ProtoMessage() {}

func (x *GetProviderSchema_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderSchema_Response.ProtoReflect.Descriptor instead.
func (*GetProviderSchema_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{14, 1}
}

func (x *GetProviderSchema_Response) GetSchema() *ProviderSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type OpenStackConfiguration_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceBundleHandle int64          `protobuf:"varint,1,opt,name=source_bundle_handle,json=sourceBundleHandle,proto3" json:"source_bundle_handle,omitempty"`
	SourceAddress      *SourceAddress `protobuf:"bytes,2,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
}

func (x *OpenStackConfiguration_Request) Reset() {
	*x = OpenStackConfiguration_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenStackConfiguration_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenStackConfiguration_Request) ProtoMessage() {}

func (x *OpenStackConfiguration_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenStackConfiguration_Request.ProtoReflect.Descriptor instead.
func (*OpenStackConfiguration_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{17, 0}
}

func (x *OpenStackConfiguration_Request) GetSourceBundleHandle() int64 {
	if x != nil {
		return x.SourceBundleHandle
	}
	return 0
}

func (x *OpenStackConfiguration_Request) GetSourceAddress() *SourceAddress {
	if x != nil {
		return x.SourceAddress
	}
	return nil
}

type OpenStackConfiguration_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackConfigHandle int64         `protobuf:"varint,1,opt,name=stack_config_handle,json=stackConfigHandle,proto3" json:"stack_config_handle,omitempty"`
	Diagnostics       []*Diagnostic `protobuf:"bytes,2,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
}

func (x *OpenStackConfiguration_Response) Reset() {
	*x = OpenStackConfiguration_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenStackConfiguration_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenStackConfiguration_Response) ProtoMessage() {}

func (x *OpenStackConfiguration_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenStackConfiguration_Response.ProtoReflect.Descriptor instead.
func (*OpenStackConfiguration_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{17, 1}
}

func (x *OpenStackConfiguration_Response) GetStackConfigHandle() int64 {
	if x != nil {
		return x.StackConfigHandle
	}
	return 0
}

func (x *OpenStackConfiguration_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

type CloseStackConfiguration_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackConfigHandle int64 `protobuf:"varint,1,opt,name=stack_config_handle,json=stackConfigHandle,proto3" json:"stack_config_handle,omitempty"`
}

func (x *CloseStackConfiguration_Request) Reset() {
	*x = CloseStackConfiguration_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseStackConfiguration_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseStackConfiguration_Request) ProtoMessage() {}

func (x *CloseStackConfiguration_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseStackConfiguration_Request.ProtoReflect.Descriptor instead.
func (*CloseStackConfiguration_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CloseStackConfiguration_Request) GetStackConfigHandle() int64 {
	if x != nil {
		return x.StackConfigHandle
	}
	return 0
}

type CloseStackConfiguration_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseStackConfiguration_Response) Reset() {
	*x = CloseStackConfiguration_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseStackConfiguration_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseStackConfiguration_Response) ProtoMessage() {}

func (x *CloseStackConfiguration_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseStackConfiguration_Response.ProtoReflect.Descriptor instead.
func (*CloseStackConfiguration_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{18, 1}
}

type FindStackConfigurationComponents_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackConfigHandle int64 `protobuf:"varint,1,opt,name=stack_config_handle,json=stackConfigHandle,proto3" json:"stack_config_handle,omitempty"`
}

func (x *FindStackConfigurationComponents_Request) Reset() {
	*x = FindStackConfigurationComponents_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationComponents_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationComponents_Request) ProtoMessage() {}

func (x *FindStackConfigurationComponents_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationComponents_Request.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationComponents_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19, 0}
}

func (x *FindStackConfigurationComponents_Request) GetStackConfigHandle() int64 {
	if x != nil {
		return x.StackConfigHandle
	}
	return 0
}

type FindStackConfigurationComponents_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *FindStackConfigurationComponents_StackConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *FindStackConfigurationComponents_Response) Reset() {
	*x = FindStackConfigurationComponents_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationComponents_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationComponents_Response) ProtoMessage() {}

func (x *FindStackConfigurationComponents_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationComponents_Response.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationComponents_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19, 1}
}

func (x *FindStackConfigurationComponents_Response) GetConfig() *FindStackConfigurationComponents_StackConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type FindStackConfigurationComponents_StackConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components     map[string]*FindStackConfigurationComponents_Component     `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EmbeddedStacks map[string]*FindStackConfigurationComponents_EmbeddedStack `protobuf:"bytes,2,rep,name=embedded_stacks,json=embeddedStacks,proto3" json:"embedded_stacks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FindStackConfigurationComponents_StackConfig) Reset() {
	*x = FindStackConfigurationComponents_StackConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationComponents_StackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationComponents_StackConfig) ProtoMessage() {}

func (x *FindStackConfigurationComponents_StackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationComponents_StackConfig.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationComponents_StackConfig) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19, 2}
}

func (x *FindStackConfigurationComponents_StackConfig) GetComponents() map[string]*FindStackConfigurationComponents_Component {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *FindStackConfigurationComponents_StackConfig) GetEmbeddedStacks() map[string]*FindStackConfigurationComponents_EmbeddedStack {
	if x != nil {
		return x.EmbeddedStacks
	}
	return nil
}

type FindStackConfigurationComponents_EmbeddedStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string                                        `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Instances  FindStackConfigurationComponents_Instances    `protobuf:"varint,2,opt,name=instances,proto3,enum=terraform1.FindStackConfigurationComponents_Instances" json:"instances,omitempty"`
	Config     *FindStackConfigurationComponents_StackConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *FindStackConfigurationComponents_EmbeddedStack) Reset() {
	*x = FindStackConfigurationComponents_EmbeddedStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationComponents_EmbeddedStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationComponents_EmbeddedStack) ProtoMessage() {}

func (x *FindStackConfigurationComponents_EmbeddedStack) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationComponents_EmbeddedStack.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationComponents_EmbeddedStack) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19, 3}
}

func (x *FindStackConfigurationComponents_EmbeddedStack) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *FindStackConfigurationComponents_EmbeddedStack) GetInstances() FindStackConfigurationComponents_Instances {
	if x != nil {
		return x.Instances
	}
	return FindStackConfigurationComponents_SINGLE
}

func (x *FindStackConfigurationComponents_EmbeddedStack) GetConfig() *FindStackConfigurationComponents_StackConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type FindStackConfigurationComponents_Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAddr string                                     `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr,proto3" json:"source_addr,omitempty"`
	Instances  FindStackConfigurationComponents_Instances `protobuf:"varint,2,opt,name=instances,proto3,enum=terraform1.FindStackConfigurationComponents_Instances" json:"instances,omitempty"`
}

func (x *FindStackConfigurationComponents_Component) Reset() {
	*x = FindStackConfigurationComponents_Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationComponents_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationComponents_Component) ProtoMessage() {}

func (x *FindStackConfigurationComponents_Component) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationComponents_Component.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationComponents_Component) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{19, 4}
}

func (x *FindStackConfigurationComponents_Component) GetSourceAddr() string {
	if x != nil {
		return x.SourceAddr
	}
	return ""
}

func (x *FindStackConfigurationComponents_Component) GetInstances() FindStackConfigurationComponents_Instances {
	if x != nil {
		return x.Instances
	}
	return FindStackConfigurationComponents_SINGLE
}

type FindStackConfigurationProviders_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackConfigHandle int64 `protobuf:"varint,1,opt,name=stack_config_handle,json=stackConfigHandle,proto3" json:"stack_config_handle,omitempty"`
}

func (x *FindStackConfigurationProviders_Request) Reset() {
	*x = FindStackConfigurationProviders_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationProviders_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationProviders_Request) ProtoMessage() {}

func (x *FindStackConfigurationProviders_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationProviders_Request.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationProviders_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{20, 0}
}

func (x *FindStackConfigurationProviders_Request) GetStackConfigHandle() int64 {
	if x != nil {
		return x.StackConfigHandle
	}
	return 0
}

type FindStackConfigurationProviders_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindStackConfigurationProviders_Response) Reset() {
	*x = FindStackConfigurationProviders_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindStackConfigurationProviders_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindStackConfigurationProviders_Response) ProtoMessage() {}

func (x *FindStackConfigurationProviders_Response) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindStackConfigurationProviders_Response.ProtoReflect.Descriptor instead.
func (*FindStackConfigurationProviders_Response) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{20, 1}
}

type PlanStackChanges_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanMode              PlanMode                           `protobuf:"varint,1,opt,name=plan_mode,json=planMode,proto3,enum=terraform1.PlanMode" json:"plan_mode,omitempty"`
	StackConfigHandle     int64                              `protobuf:"varint,2,opt,name=stack_config_handle,json=stackConfigHandle,proto3" json:"stack_config_handle,omitempty"`
	PreviousState         map[string]*anypb.Any              `protobuf:"bytes,3,rep,name=previous_state,json=previousState,proto3" json:"previous_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DependencyLocksHandle int64                              `protobuf:"varint,4,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
	ProviderCacheHandle   int64                              `protobuf:"varint,5,opt,name=provider_cache_handle,json=providerCacheHandle,proto3" json:"provider_cache_handle,omitempty"`
	InputValues           map[string]*DynamicValueWithSource `protobuf:"bytes,6,rep,name=input_values,json=inputValues,proto3" json:"input_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // TODO: Various other planning options
}

func (x *PlanStackChanges_Request) Reset() {
	*x = PlanStackChanges_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanStackChanges_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanStackChanges_Request) ProtoMessage() {}

func (x *PlanStackChanges_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanStackChanges_Request.ProtoReflect.Descriptor instead.
func (*PlanStackChanges_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{21, 0}
}

func (x *PlanStackChanges_Request) GetPlanMode() PlanMode {
	if x != nil {
		return x.PlanMode
	}
	return PlanMode_NORMAL
}

func (x *PlanStackChanges_Request) GetStackConfigHandle() int64 {
	if x != nil {
		return x.StackConfigHandle
	}
	return 0
}

func (x *PlanStackChanges_Request) GetPreviousState() map[string]*anypb.Any {
	if x != nil {
		return x.PreviousState
	}
	return nil
}

func (x *PlanStackChanges_Request) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

func (x *PlanStackChanges_Request) GetProviderCacheHandle() int64 {
	if x != nil {
		return x.ProviderCacheHandle
	}
	return 0
}

func (x *PlanStackChanges_Request) GetInputValues() map[string]*DynamicValueWithSource {
	if x != nil {
		return x.InputValues
	}
	return nil
}

type PlanStackChanges_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*PlanStackChanges_Event_PlannedChange
	//	*PlanStackChanges_Event_Diagnostic
	//	*PlanStackChanges_Event_ComponentInstanceStatus
	//	*PlanStackChanges_Event_ResourceInstanceStatus
	//	*PlanStackChanges_Event_ResourceInstancePlannedChange
	//	*PlanStackChanges_Event_ProvisionerStatus
	//	*PlanStackChanges_Event_ProvisionerOutput
	Event isPlanStackChanges_Event_Event `protobuf_oneof:"event"`
}

func (x *PlanStackChanges_Event) Reset() {
	*x = PlanStackChanges_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanStackChanges_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanStackChanges_Event) ProtoMessage() {}

func (x *PlanStackChanges_Event) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanStackChanges_Event.ProtoReflect.Descriptor instead.
func (*PlanStackChanges_Event) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{21, 1}
}

func (m *PlanStackChanges_Event) GetEvent() isPlanStackChanges_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *PlanStackChanges_Event) GetPlannedChange() *PlannedChange {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_PlannedChange); ok {
		return x.PlannedChange
	}
	return nil
}

func (x *PlanStackChanges_Event) GetDiagnostic() *Diagnostic {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_Diagnostic); ok {
		return x.Diagnostic
	}
	return nil
}

func (x *PlanStackChanges_Event) GetComponentInstanceStatus() *ComponentInstanceStatus {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_ComponentInstanceStatus); ok {
		return x.ComponentInstanceStatus
	}
	return nil
}

func (x *PlanStackChanges_Event) GetResourceInstanceStatus() *ResourceInstanceStatus {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_ResourceInstanceStatus); ok {
		return x.ResourceInstanceStatus
	}
	return nil
}

func (x *PlanStackChanges_Event) GetResourceInstancePlannedChange() *ResourceInstancePlannedChange {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_ResourceInstancePlannedChange); ok {
		return x.ResourceInstancePlannedChange
	}
	return nil
}

func (x *PlanStackChanges_Event) GetProvisionerStatus() *ProvisionerStatus {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_ProvisionerStatus); ok {
		return x.ProvisionerStatus
	}
	return nil
}

func (x *PlanStackChanges_Event) GetProvisionerOutput() *ProvisionerOutput {
	if x, ok := x.GetEvent().(*PlanStackChanges_Event_ProvisionerOutput); ok {
		return x.ProvisionerOutput
	}
	return nil
}

type isPlanStackChanges_Event_Event interface {
	isPlanStackChanges_Event_Event()
}

type PlanStackChanges_Event_PlannedChange struct {
	PlannedChange *PlannedChange `protobuf:"bytes,1,opt,name=planned_change,json=plannedChange,proto3,oneof"`
}

type PlanStackChanges_Event_Diagnostic struct {
	Diagnostic *Diagnostic `protobuf:"bytes,2,opt,name=diagnostic,proto3,oneof"`
}

type PlanStackChanges_Event_ComponentInstanceStatus struct {
	ComponentInstanceStatus *ComponentInstanceStatus `protobuf:"bytes,3,opt,name=component_instance_status,json=componentInstanceStatus,proto3,oneof"`
}

type PlanStackChanges_Event_ResourceInstanceStatus struct {
	ResourceInstanceStatus *ResourceInstanceStatus `protobuf:"bytes,4,opt,name=resource_instance_status,json=resourceInstanceStatus,proto3,oneof"`
}

type PlanStackChanges_Event_ResourceInstancePlannedChange struct {
	ResourceInstancePlannedChange *ResourceInstancePlannedChange `protobuf:"bytes,5,opt,name=resource_instance_planned_change,json=resourceInstancePlannedChange,proto3,oneof"`
}

type PlanStackChanges_Event_ProvisionerStatus struct {
	ProvisionerStatus *ProvisionerStatus `protobuf:"bytes,6,opt,name=provisioner_status,json=provisionerStatus,proto3,oneof"`
}

type PlanStackChanges_Event_ProvisionerOutput struct {
	ProvisionerOutput *ProvisionerOutput `protobuf:"bytes,7,opt,name=provisioner_output,json=provisionerOutput,proto3,oneof"` // TODO
}

func (*PlanStackChanges_Event_PlannedChange) isPlanStackChanges_Event_Event() {}

func (*PlanStackChanges_Event_Diagnostic) isPlanStackChanges_Event_Event() {}

func (*PlanStackChanges_Event_ComponentInstanceStatus) isPlanStackChanges_Event_Event() {}

func (*PlanStackChanges_Event_ResourceInstanceStatus) isPlanStackChanges_Event_Event() {}

func (*PlanStackChanges_Event_ResourceInstancePlannedChange) isPlanStackChanges_Event_Event() {}

func (*PlanStackChanges_Event_ProvisionerStatus) isPlanStackChanges_Event_Event() {}

func (*PlanStackChanges_Event_ProvisionerOutput) isPlanStackChanges_Event_Event() {}

type ApplyStackChanges_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This must refer to exactly the same configuration that was
	// passed to PlanStackChanges when creating this plan, or the
	// results will be unpredictable.
	StackConfigHandle int64 `protobuf:"varint,1,opt,name=stack_config_handle,json=stackConfigHandle,proto3" json:"stack_config_handle,omitempty"`
	// This must be exactly the same as the previous_state that
	// was passed to PlanStackChanges when creating this plan.
	PreviousState map[string]*anypb.Any `protobuf:"bytes,2,rep,name=previous_state,json=previousState,proto3" json:"previous_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The caller should send all of the keys present in the previous
	// apply's description map. Terraform Core will use this for
	// situations such as updating existing descriptions to newer
	// formats even if no change is being made to the corresponding
	// real objects.
	KnownDescriptionKeys []string `protobuf:"bytes,3,rep,name=known_description_keys,json=knownDescriptionKeys,proto3" json:"known_description_keys,omitempty"`
	// This must include all of the "raw" values emitted through
	// PlannedChange events during the PlanStackChanges operation
	// that created this plan, concatenated together in the same
	// order they were written to the PlanStackChanges event stream.
	PlannedChanges []*anypb.Any `protobuf:"bytes,4,rep,name=planned_changes,json=plannedChanges,proto3" json:"planned_changes,omitempty"`
	// This must be equivalent to the argument of the same name
	// passed to PlanStackChanges when creating this plan.
	DependencyLocksHandle int64 `protobuf:"varint,5,opt,name=dependency_locks_handle,json=dependencyLocksHandle,proto3" json:"dependency_locks_handle,omitempty"`
	// This must be equivalent to the argument of the same name
	// passed to PlanStackChanges when creating this plan.
	ProviderCacheHandle int64 `protobuf:"varint,6,opt,name=provider_cache_handle,json=providerCacheHandle,proto3" json:"provider_cache_handle,omitempty"`
}

func (x *ApplyStackChanges_Request) Reset() {
	*x = ApplyStackChanges_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyStackChanges_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyStackChanges_Request) ProtoMessage() {}

func (x *ApplyStackChanges_Request) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyStackChanges_Request.ProtoReflect.Descriptor instead.
func (*ApplyStackChanges_Request) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{22, 0}
}

func (x *ApplyStackChanges_Request) GetStackConfigHandle() int64 {
	if x != nil {
		return x.StackConfigHandle
	}
	return 0
}

func (x *ApplyStackChanges_Request) GetPreviousState() map[string]*anypb.Any {
	if x != nil {
		return x.PreviousState
	}
	return nil
}

func (x *ApplyStackChanges_Request) GetKnownDescriptionKeys() []string {
	if x != nil {
		return x.KnownDescriptionKeys
	}
	return nil
}

func (x *ApplyStackChanges_Request) GetPlannedChanges() []*anypb.Any {
	if x != nil {
		return x.PlannedChanges
	}
	return nil
}

func (x *ApplyStackChanges_Request) GetDependencyLocksHandle() int64 {
	if x != nil {
		return x.DependencyLocksHandle
	}
	return 0
}

func (x *ApplyStackChanges_Request) GetProviderCacheHandle() int64 {
	if x != nil {
		return x.ProviderCacheHandle
	}
	return 0
}

type ApplyStackChanges_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*ApplyStackChanges_Event_AppliedChange
	//	*ApplyStackChanges_Event_Diagnostic
	Event isApplyStackChanges_Event_Event `protobuf_oneof:"event"`
}

func (x *ApplyStackChanges_Event) Reset() {
	*x = ApplyStackChanges_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyStackChanges_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyStackChanges_Event) ProtoMessage() {}

func (x *ApplyStackChanges_Event) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyStackChanges_Event.ProtoReflect.Descriptor instead.
func (*ApplyStackChanges_Event) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{22, 1}
}

func (m *ApplyStackChanges_Event) GetEvent() isApplyStackChanges_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *ApplyStackChanges_Event) GetAppliedChange() *AppliedChange {
	if x, ok := x.GetEvent().(*ApplyStackChanges_Event_AppliedChange); ok {
		return x.AppliedChange
	}
	return nil
}

func (x *ApplyStackChanges_Event) GetDiagnostic() *Diagnostic {
	if x, ok := x.GetEvent().(*ApplyStackChanges_Event_Diagnostic); ok {
		return x.Diagnostic
	}
	return nil
}

type isApplyStackChanges_Event_Event interface {
	isApplyStackChanges_Event_Event()
}

type ApplyStackChanges_Event_AppliedChange struct {
	AppliedChange *AppliedChange `protobuf:"bytes,1,opt,name=applied_change,json=appliedChange,proto3,oneof"`
}

type ApplyStackChanges_Event_Diagnostic struct {
	Diagnostic *Diagnostic `protobuf:"bytes,2,opt,name=diagnostic,proto3,oneof"` // TODO: progress events intended for updating the UI
}

func (*ApplyStackChanges_Event_AppliedChange) isApplyStackChanges_Event_Event() {}

func (*ApplyStackChanges_Event_Diagnostic) isApplyStackChanges_Event_Event() {}

type AttributePath_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Selector:
	//
	//	*AttributePath_Step_AttributeName
	//	*AttributePath_Step_ElementKeyString
	//	*AttributePath_Step_ElementKeyInt
	Selector isAttributePath_Step_Selector `protobuf_oneof:"selector"`
}

func (x *AttributePath_Step) Reset() {
	*x = AttributePath_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributePath_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributePath_Step) ProtoMessage() {}

func (x *AttributePath_Step) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributePath_Step.ProtoReflect.Descriptor instead.
func (*AttributePath_Step) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{26, 0}
}

func (m *AttributePath_Step) GetSelector() isAttributePath_Step_Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (x *AttributePath_Step) GetAttributeName() string {
	if x, ok := x.GetSelector().(*AttributePath_Step_AttributeName); ok {
		return x.AttributeName
	}
	return ""
}

func (x *AttributePath_Step) GetElementKeyString() string {
	if x, ok := x.GetSelector().(*AttributePath_Step_ElementKeyString); ok {
		return x.ElementKeyString
	}
	return ""
}

func (x *AttributePath_Step) GetElementKeyInt() int64 {
	if x, ok := x.GetSelector().(*AttributePath_Step_ElementKeyInt); ok {
		return x.ElementKeyInt
	}
	return 0
}

type isAttributePath_Step_Selector interface {
	isAttributePath_Step_Selector()
}

type AttributePath_Step_AttributeName struct {
	// Set "attribute_name" to represent looking up an attribute
	// in the current object value.
	AttributeName string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3,oneof"`
}

type AttributePath_Step_ElementKeyString struct {
	// Set "element_key_*" to represent looking up an element in
	// an indexable collection type.
	ElementKeyString string `protobuf:"bytes,2,opt,name=element_key_string,json=elementKeyString,proto3,oneof"`
}

type AttributePath_Step_ElementKeyInt struct {
	ElementKeyInt int64 `protobuf:"varint,3,opt,name=element_key_int,json=elementKeyInt,proto3,oneof"`
}

func (*AttributePath_Step_AttributeName) isAttributePath_Step_Selector() {}

func (*AttributePath_Step_ElementKeyString) isAttributePath_Step_Selector() {}

func (*AttributePath_Step_ElementKeyInt) isAttributePath_Step_Selector() {}

// Reports the existence of a particular instance of a component,
// once Terraform has resolved arguments such as "for_each" that
// might make the set of instances dynamic.
type PlannedChange_ComponentInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr *ComponentInstanceInStackAddr `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// The changes to the existence of this instance relative to the
	// prior state. This only considers the component instance directly,
	// and doesn't take into account what actions are planned for any
	// resource instances inside.
	Actions []ChangeType `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=terraform1.ChangeType" json:"actions,omitempty"`
}

func (x *PlannedChange_ComponentInstance) Reset() {
	*x = PlannedChange_ComponentInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedChange_ComponentInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedChange_ComponentInstance) ProtoMessage() {}

func (x *PlannedChange_ComponentInstance) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedChange_ComponentInstance.ProtoReflect.Descriptor instead.
func (*PlannedChange_ComponentInstance) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{30, 0}
}

func (x *PlannedChange_ComponentInstance) GetAddr() *ComponentInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *PlannedChange_ComponentInstance) GetActions() []ChangeType {
	if x != nil {
		return x.Actions
	}
	return nil
}

type PlannedChange_ResourceInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         *ResourceInstanceInStackAddr             `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Actions      []ChangeType                             `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=terraform1.ChangeType" json:"actions,omitempty"`
	Values       *DynamicValueChange                      `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`
	Moved        *PlannedChange_ResourceInstance_Moved    `protobuf:"bytes,4,opt,name=moved,proto3" json:"moved,omitempty"`
	Imported     *PlannedChange_ResourceInstance_Imported `protobuf:"bytes,5,opt,name=imported,proto3" json:"imported,omitempty"`
	ResourceMode ResourceMode                             `protobuf:"varint,6,opt,name=resource_mode,json=resourceMode,proto3,enum=terraform1.ResourceMode" json:"resource_mode,omitempty"`
	ResourceType string                                   `protobuf:"bytes,7,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ProviderAddr string                                   `protobuf:"bytes,8,opt,name=provider_addr,json=providerAddr,proto3" json:"provider_addr,omitempty"`
}

func (x *PlannedChange_ResourceInstance) Reset() {
	*x = PlannedChange_ResourceInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedChange_ResourceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedChange_ResourceInstance) ProtoMessage() {}

func (x *PlannedChange_ResourceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedChange_ResourceInstance.ProtoReflect.Descriptor instead.
func (*PlannedChange_ResourceInstance) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{30, 1}
}

func (x *PlannedChange_ResourceInstance) GetAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *PlannedChange_ResourceInstance) GetActions() []ChangeType {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PlannedChange_ResourceInstance) GetValues() *DynamicValueChange {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *PlannedChange_ResourceInstance) GetMoved() *PlannedChange_ResourceInstance_Moved {
	if x != nil {
		return x.Moved
	}
	return nil
}

func (x *PlannedChange_ResourceInstance) GetImported() *PlannedChange_ResourceInstance_Imported {
	if x != nil {
		return x.Imported
	}
	return nil
}

func (x *PlannedChange_ResourceInstance) GetResourceMode() ResourceMode {
	if x != nil {
		return x.ResourceMode
	}
	return ResourceMode_UNKNOWN
}

func (x *PlannedChange_ResourceInstance) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *PlannedChange_ResourceInstance) GetProviderAddr() string {
	if x != nil {
		return x.ProviderAddr
	}
	return ""
}

// Note: this is only for output values from the topmost
// stack configuration, because all other output values are
// internal to the configuration and not part of its public API.
type PlannedChange_OutputValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Actions []ChangeType        `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=terraform1.ChangeType" json:"actions,omitempty"`
	Values  *DynamicValueChange `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *PlannedChange_OutputValue) Reset() {
	*x = PlannedChange_OutputValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedChange_OutputValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedChange_OutputValue) ProtoMessage() {}

func (x *PlannedChange_OutputValue) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedChange_OutputValue.ProtoReflect.Descriptor instead.
func (*PlannedChange_OutputValue) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{30, 2}
}

func (x *PlannedChange_OutputValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlannedChange_OutputValue) GetActions() []ChangeType {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PlannedChange_OutputValue) GetValues() *DynamicValueChange {
	if x != nil {
		return x.Values
	}
	return nil
}

type PlannedChange_ResourceInstance_Moved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevAddr *ResourceInstanceInStackAddr `protobuf:"bytes,1,opt,name=prev_addr,json=prevAddr,proto3" json:"prev_addr,omitempty"`
}

func (x *PlannedChange_ResourceInstance_Moved) Reset() {
	*x = PlannedChange_ResourceInstance_Moved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedChange_ResourceInstance_Moved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedChange_ResourceInstance_Moved) ProtoMessage() {}

func (x *PlannedChange_ResourceInstance_Moved) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedChange_ResourceInstance_Moved.ProtoReflect.Descriptor instead.
func (*PlannedChange_ResourceInstance_Moved) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{30, 1, 0}
}

func (x *PlannedChange_ResourceInstance_Moved) GetPrevAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.PrevAddr
	}
	return nil
}

type PlannedChange_ResourceInstance_Imported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
}

func (x *PlannedChange_ResourceInstance_Imported) Reset() {
	*x = PlannedChange_ResourceInstance_Imported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlannedChange_ResourceInstance_Imported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlannedChange_ResourceInstance_Imported) ProtoMessage() {}

func (x *PlannedChange_ResourceInstance_Imported) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlannedChange_ResourceInstance_Imported.ProtoReflect.Descriptor instead.
func (*PlannedChange_ResourceInstance_Imported) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{30, 1, 1}
}

func (x *PlannedChange_ResourceInstance_Imported) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

type AppliedChange_RawChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *anypb.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AppliedChange_RawChange) Reset() {
	*x = AppliedChange_RawChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedChange_RawChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedChange_RawChange) ProtoMessage() {}

func (x *AppliedChange_RawChange) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedChange_RawChange.ProtoReflect.Descriptor instead.
func (*AppliedChange_RawChange) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{31, 0}
}

func (x *AppliedChange_RawChange) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AppliedChange_RawChange) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppliedChange_ChangeDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Description:
	//
	//	*AppliedChange_ChangeDescription_ResourceInstance
	//	*AppliedChange_ChangeDescription_OutputValue
	Description isAppliedChange_ChangeDescription_Description `protobuf_oneof:"description"`
}

func (x *AppliedChange_ChangeDescription) Reset() {
	*x = AppliedChange_ChangeDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedChange_ChangeDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedChange_ChangeDescription) ProtoMessage() {}

func (x *AppliedChange_ChangeDescription) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedChange_ChangeDescription.ProtoReflect.Descriptor instead.
func (*AppliedChange_ChangeDescription) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{31, 1}
}

func (x *AppliedChange_ChangeDescription) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *AppliedChange_ChangeDescription) GetDescription() isAppliedChange_ChangeDescription_Description {
	if m != nil {
		return m.Description
	}
	return nil
}

func (x *AppliedChange_ChangeDescription) GetResourceInstance() *AppliedChange_ResourceInstance {
	if x, ok := x.GetDescription().(*AppliedChange_ChangeDescription_ResourceInstance); ok {
		return x.ResourceInstance
	}
	return nil
}

func (x *AppliedChange_ChangeDescription) GetOutputValue() *AppliedChange_OutputValue {
	if x, ok := x.GetDescription().(*AppliedChange_ChangeDescription_OutputValue); ok {
		return x.OutputValue
	}
	return nil
}

type isAppliedChange_ChangeDescription_Description interface {
	isAppliedChange_ChangeDescription_Description()
}

type AppliedChange_ChangeDescription_ResourceInstance struct {
	ResourceInstance *AppliedChange_ResourceInstance `protobuf:"bytes,2,opt,name=resource_instance,json=resourceInstance,proto3,oneof"`
}

type AppliedChange_ChangeDescription_OutputValue struct {
	OutputValue *AppliedChange_OutputValue `protobuf:"bytes,3,opt,name=output_value,json=outputValue,proto3,oneof"`
}

func (*AppliedChange_ChangeDescription_ResourceInstance) isAppliedChange_ChangeDescription_Description() {
}

func (*AppliedChange_ChangeDescription_OutputValue) isAppliedChange_ChangeDescription_Description() {}

type AppliedChange_ResourceInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     *ResourceInstanceInStackAddr `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	NewValue *DynamicValue                `protobuf:"bytes,2,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
}

func (x *AppliedChange_ResourceInstance) Reset() {
	*x = AppliedChange_ResourceInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedChange_ResourceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedChange_ResourceInstance) ProtoMessage() {}

func (x *AppliedChange_ResourceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedChange_ResourceInstance.ProtoReflect.Descriptor instead.
func (*AppliedChange_ResourceInstance) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{31, 2}
}

func (x *AppliedChange_ResourceInstance) GetAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *AppliedChange_ResourceInstance) GetNewValue() *DynamicValue {
	if x != nil {
		return x.NewValue
	}
	return nil
}

type AppliedChange_OutputValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NewValue *DynamicValue `protobuf:"bytes,2,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
}

func (x *AppliedChange_OutputValue) Reset() {
	*x = AppliedChange_OutputValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppliedChange_OutputValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppliedChange_OutputValue) ProtoMessage() {}

func (x *AppliedChange_OutputValue) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppliedChange_OutputValue.ProtoReflect.Descriptor instead.
func (*AppliedChange_OutputValue) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{31, 3}
}

func (x *AppliedChange_OutputValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppliedChange_OutputValue) GetNewValue() *DynamicValue {
	if x != nil {
		return x.NewValue
	}
	return nil
}

type Schema_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes  []*Schema_Attribute   `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	BlockTypes  []*Schema_NestedBlock `protobuf:"bytes,2,rep,name=block_types,json=blockTypes,proto3" json:"block_types,omitempty"`
	Description *Schema_DocString     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Deprecated  bool                  `protobuf:"varint,4,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
}

func (x *Schema_Block) Reset() {
	*x = Schema_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Block) ProtoMessage() {}

func (x *Schema_Block) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Block.ProtoReflect.Descriptor instead.
func (*Schema_Block) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 0}
}

func (x *Schema_Block) GetAttributes() []*Schema_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Schema_Block) GetBlockTypes() []*Schema_NestedBlock {
	if x != nil {
		return x.BlockTypes
	}
	return nil
}

func (x *Schema_Block) GetDescription() *Schema_DocString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Schema_Block) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

type Schema_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type        []byte            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	NestedType  *Schema_Object    `protobuf:"bytes,10,opt,name=nested_type,json=nestedType,proto3" json:"nested_type,omitempty"`
	Description *Schema_DocString `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Required    bool              `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	Optional    bool              `protobuf:"varint,5,opt,name=optional,proto3" json:"optional,omitempty"`
	Computed    bool              `protobuf:"varint,6,opt,name=computed,proto3" json:"computed,omitempty"`
	Sensitive   bool              `protobuf:"varint,7,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
	Deprecated  bool              `protobuf:"varint,8,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
}

func (x *Schema_Attribute) Reset() {
	*x = Schema_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Attribute) ProtoMessage() {}

func (x *Schema_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Attribute.ProtoReflect.Descriptor instead.
func (*Schema_Attribute) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 1}
}

func (x *Schema_Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Schema_Attribute) GetType() []byte {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Schema_Attribute) GetNestedType() *Schema_Object {
	if x != nil {
		return x.NestedType
	}
	return nil
}

func (x *Schema_Attribute) GetDescription() *Schema_DocString {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Schema_Attribute) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Schema_Attribute) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *Schema_Attribute) GetComputed() bool {
	if x != nil {
		return x.Computed
	}
	return false
}

func (x *Schema_Attribute) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

func (x *Schema_Attribute) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

type Schema_NestedBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName string                         `protobuf:"bytes,1,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Block    *Schema_Block                  `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Nesting  Schema_NestedBlock_NestingMode `protobuf:"varint,3,opt,name=nesting,proto3,enum=terraform1.Schema_NestedBlock_NestingMode" json:"nesting,omitempty"`
}

func (x *Schema_NestedBlock) Reset() {
	*x = Schema_NestedBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema_NestedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_NestedBlock) ProtoMessage() {}

func (x *Schema_NestedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_NestedBlock.ProtoReflect.Descriptor instead.
func (*Schema_NestedBlock) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 2}
}

func (x *Schema_NestedBlock) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Schema_NestedBlock) GetBlock() *Schema_Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *Schema_NestedBlock) GetNesting() Schema_NestedBlock_NestingMode {
	if x != nil {
		return x.Nesting
	}
	return Schema_NestedBlock_INVALID
}

type Schema_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes []*Schema_Attribute       `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Nesting    Schema_Object_NestingMode `protobuf:"varint,3,opt,name=nesting,proto3,enum=terraform1.Schema_Object_NestingMode" json:"nesting,omitempty"`
}

func (x *Schema_Object) Reset() {
	*x = Schema_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Object) ProtoMessage() {}

func (x *Schema_Object) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Object.ProtoReflect.Descriptor instead.
func (*Schema_Object) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 3}
}

func (x *Schema_Object) GetAttributes() []*Schema_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Schema_Object) GetNesting() Schema_Object_NestingMode {
	if x != nil {
		return x.Nesting
	}
	return Schema_Object_INVALID
}

type Schema_DocString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Format      Schema_DocString_Format `protobuf:"varint,2,opt,name=format,proto3,enum=terraform1.Schema_DocString_Format" json:"format,omitempty"`
}

func (x *Schema_DocString) Reset() {
	*x = Schema_DocString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema_DocString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_DocString) ProtoMessage() {}

func (x *Schema_DocString) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_DocString.ProtoReflect.Descriptor instead.
func (*Schema_DocString) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{35, 4}
}

func (x *Schema_DocString) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Schema_DocString) GetFormat() Schema_DocString_Format {
	if x != nil {
		return x.Format
	}
	return Schema_DocString_PLAIN
}

type ResourceInstancePlannedChange_Moved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevAddr *ResourceInstanceInStackAddr `protobuf:"bytes,1,opt,name=prev_addr,json=prevAddr,proto3" json:"prev_addr,omitempty"`
}

func (x *ResourceInstancePlannedChange_Moved) Reset() {
	*x = ResourceInstancePlannedChange_Moved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInstancePlannedChange_Moved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInstancePlannedChange_Moved) ProtoMessage() {}

func (x *ResourceInstancePlannedChange_Moved) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInstancePlannedChange_Moved.ProtoReflect.Descriptor instead.
func (*ResourceInstancePlannedChange_Moved) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{38, 0}
}

func (x *ResourceInstancePlannedChange_Moved) GetPrevAddr() *ResourceInstanceInStackAddr {
	if x != nil {
		return x.PrevAddr
	}
	return nil
}

type ResourceInstancePlannedChange_Imported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportId string `protobuf:"bytes,1,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
}

func (x *ResourceInstancePlannedChange_Imported) Reset() {
	*x = ResourceInstancePlannedChange_Imported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_terraform1_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInstancePlannedChange_Imported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInstancePlannedChange_Imported) ProtoMessage() {}

func (x *ResourceInstancePlannedChange_Imported) ProtoReflect() protoreflect.Message {
	mi := &file_terraform1_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInstancePlannedChange_Imported.ProtoReflect.Descriptor instead.
func (*ResourceInstancePlannedChange_Imported) Descriptor() ([]byte, []int) {
	return file_terraform1_proto_rawDescGZIP(), []int{38, 1}
}

func (x *ResourceInstancePlannedChange_Imported) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

var File_terraform1_proto protoreflect.FileDescriptor

var file_terraform1_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x09, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x1a, 0x4d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x14, 0x0a, 0x12,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x7a, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x28, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x1a, 0x3c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x5c,
	0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x1a, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95, 0x02, 0x0a,
	0x16, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c,
	0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x7d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x7c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c,
	0x6f, 0x63, 0x6b, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x57,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x42, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x65, 0x0a, 0x14, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f,
	0x63, 0x6b, 0x73, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x17, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b,
	0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x56, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x11, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x8b, 0x11, 0x0a, 0x18, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0xc0, 0x03, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x6d, 0x0a,
	0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0xc3, 0x01, 0x0a, 0x0d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x69,
	0x72, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a,
	0xab, 0x0d, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x69, 0x0a, 0x11, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x5f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x49, 0x6e, 0x12, 0x61, 0x0a,
	0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x12, 0x61, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x64, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x65, 0x74, 0x63, 0x68, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x12, 0x61, 0x0a, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x1a, 0x65, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x5a, 0x0a, 0x08, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0x52, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4c, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4f, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x0a, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x65, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf5, 0x02, 0x0a,
	0x0d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x65,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x46, 0x6f,
	0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x6a, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x53, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x46,
	0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x12, 0x0a, 0x0e, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x45, 0x44, 0x10, 0x04, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xae, 0x01,
	0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x53, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69,
	0x72, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x3e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x65,
	0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x3d, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x58, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c,
	0x74, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x09, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x58, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x12, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x8d, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x3e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x64, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0xd3, 0x03,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x3b, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6a, 0x0a,
	0x16, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x13, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x5b, 0x0a, 0x19,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x58, 0x0a, 0x16, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8d, 0x02, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x7d,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x74, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x22, 0x60, 0x0a, 0x17, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x39,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4, 0x08, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x5c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0xe4, 0x03, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x68, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x75, 0x0a,
	0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x73, 0x1a, 0x75, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x7d, 0x0a, 0x13, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x50, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xd8, 0x01, 0x0a, 0x0d, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x54, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x82, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x54, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x09, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4e, 0x47, 0x4c,
	0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x46, 0x4f, 0x52, 0x5f, 0x45, 0x41, 0x43, 0x48, 0x10, 0x02, 0x22, 0x68, 0x0a, 0x1f,
	0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a,
	0x39, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcd, 0x09, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x6e, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0xce, 0x04, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x0e, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x1a, 0x56, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a, 0x10, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xe7, 0x04, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x61, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x17,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5e, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52,
	0x16, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x74, 0x0a, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4e, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xfa, 0x04, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0xd3, 0x03, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x3d, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x36,
	0x0a, 0x17, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x56, 0x0a, 0x12, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x8e, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0a,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x37, 0x0a,
	0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0x6c, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x03,
	0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x03, 0x6e, 0x65, 0x77, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x0d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74,
	0x65, 0x70, 0x73, 0x1a, 0x95, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x27, 0x0a, 0x0e,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x74, 0x42,
	0x0a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x7d, 0x0a, 0x1c, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x22, 0x43, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf5, 0x0a,
	0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x26, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x6b, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x19, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x66, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x72, 0x69, 0x66, 0x74, 0x65, 0x64, 0x12, 0x68,
	0x0a, 0x19, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x17, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x12, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x83, 0x01, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0xd3, 0x04, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x64, 0x52,
	0x05, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x08, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x1a, 0x4d, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x41, 0x64, 0x64, 0x72, 0x1a,
	0x27, 0x0a, 0x08, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x1a, 0x8b, 0x01, 0x0a, 0x0b, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x05, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x52, 0x61, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x4f,
	0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x49, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xdb, 0x01, 0x0a, 0x11, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x86, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x65,
	0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x58, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x0a,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x31, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x2f, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x22, 0x84, 0x01, 0x0a, 0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x27,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x6f, 0x73, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x4b, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x79, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x62, 0x79, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x22, 0xb5, 0x09, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x2e, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x1a,
	0xe6, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x44, 0x6f, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0xc1, 0x02, 0x0a, 0x09, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a,
	0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x1a, 0xef, 0x01, 0x0a,
	0x0b, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x07, 0x6e, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x4d, 0x0a, 0x0b, 0x4e, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41,
	0x50, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x05, 0x1a, 0xcb,
	0x01, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x6e, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x07, 0x6e, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x0b, 0x4e, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45,
	0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x04, 0x1a, 0x8d, 0x01, 0x0a,
	0x09, 0x44, 0x6f, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x44, 0x6f, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x21, 0x0a, 0x06, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x4d, 0x41, 0x52, 0x4b, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x22, 0x82, 0x02, 0x0a,
	0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x65, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50,
	0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50, 0x4c, 0x49,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x45, 0x44, 0x10,
	0x06, 0x22, 0x9f, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41,
	0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x50, 0x50, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x45,
	0x44, 0x10, 0x08, 0x22, 0x9d, 0x03, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x64, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x08, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x1a, 0x4d, 0x0a, 0x05, 0x4d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x27, 0x0a, 0x08, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x45, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x03, 0x22, 0x7c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2a, 0x32, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x2a, 0x35, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x4f, 0x4e,
	0x4c, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x10,
	0x02, 0x2a, 0x44, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x32, 0x53, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x12, 0x4a, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x1d, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x0a, 0x0a,
	0x0c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x5f, 0x0a,
	0x10, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62,
	0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x29,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x18, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x2c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x30, 0x01, 0x12, 0x74, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x2b,
	0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x2c, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x27, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd5, 0x05, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x73, 0x12, 0x71, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x1f,
	0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x33, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x20, 0x46,
	0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x34, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10,
	0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x12, 0x24, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x11,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_terraform1_proto_rawDescOnce sync.Once
	file_terraform1_proto_rawDescData = file_terraform1_proto_rawDesc
)

func file_terraform1_proto_rawDescGZIP() []byte {
	file_terraform1_proto_rawDescOnce.Do(func() {
		file_terraform1_proto_rawDescData = protoimpl.X.CompressGZIP(file_terraform1_proto_rawDescData)
	})
	return file_terraform1_proto_rawDescData
}

var file_terraform1_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_terraform1_proto_msgTypes = make([]protoimpl.MessageInfo, 113)
var file_terraform1_proto_goTypes = []interface{}{
	(ResourceMode)(0), // 0: terraform1.ResourceMode
	(PlanMode)(0),     // 1: terraform1.PlanMode
	(ChangeType)(0),   // 2: terraform1.ChangeType
	(BuildProviderPluginCache_Event_FetchComplete_AuthResult)(0), // 3: terraform1.BuildProviderPluginCache.Event.FetchComplete.AuthResult
	(FindStackConfigurationComponents_Instances)(0),              // 4: terraform1.FindStackConfigurationComponents.Instances
	(Diagnostic_Severity)(0),                                     // 5: terraform1.Diagnostic.Severity
	(Schema_NestedBlock_NestingMode)(0),                          // 6: terraform1.Schema.NestedBlock.NestingMode
	(Schema_Object_NestingMode)(0),                               // 7: terraform1.Schema.Object.NestingMode
	(Schema_DocString_Format)(0),                                 // 8: terraform1.Schema.DocString.Format
	(ComponentInstanceStatus_Status)(0),                          // 9: terraform1.ComponentInstanceStatus.Status
	(ResourceInstanceStatus_Status)(0),                           // 10: terraform1.ResourceInstanceStatus.Status
	(ProvisionerStatus_Status)(0),                                // 11: terraform1.ProvisionerStatus.Status
	(*Handshake)(nil),                                            // 12: terraform1.Handshake
	(*ClientCapabilities)(nil),                                   // 13: terraform1.ClientCapabilities
	(*ServerCapabilities)(nil),                                   // 14: terraform1.ServerCapabilities
	(*OpenSourceBundle)(nil),                                     // 15: terraform1.OpenSourceBundle
	(*CloseSourceBundle)(nil),                                    // 16: terraform1.CloseSourceBundle
	(*OpenDependencyLockFile)(nil),                               // 17: terraform1.OpenDependencyLockFile
	(*CreateDependencyLocks)(nil),                                // 18: terraform1.CreateDependencyLocks
	(*CloseDependencyLocks)(nil),                                 // 19: terraform1.CloseDependencyLocks
	(*GetLockedProviderDependencies)(nil),                        // 20: terraform1.GetLockedProviderDependencies
	(*BuildProviderPluginCache)(nil),                             // 21: terraform1.BuildProviderPluginCache
	(*OpenProviderPluginCache)(nil),                              // 22: terraform1.OpenProviderPluginCache
	(*CloseProviderPluginCache)(nil),                             // 23: terraform1.CloseProviderPluginCache
	(*GetCachedProviders)(nil),                                   // 24: terraform1.GetCachedProviders
	(*GetBuiltInProviders)(nil),                                  // 25: terraform1.GetBuiltInProviders
	(*GetProviderSchema)(nil),                                    // 26: terraform1.GetProviderSchema
	(*ProviderPackage)(nil),                                      // 27: terraform1.ProviderPackage
	(*ProviderSchema)(nil),                                       // 28: terraform1.ProviderSchema
	(*OpenStackConfiguration)(nil),                               // 29: terraform1.OpenStackConfiguration
	(*CloseStackConfiguration)(nil),                              // 30: terraform1.CloseStackConfiguration
	(*FindStackConfigurationComponents)(nil),                     // 31: terraform1.FindStackConfigurationComponents
	(*FindStackConfigurationProviders)(nil),                      // 32: terraform1.FindStackConfigurationProviders
	(*PlanStackChanges)(nil),                                     // 33: terraform1.PlanStackChanges
	(*ApplyStackChanges)(nil),                                    // 34: terraform1.ApplyStackChanges
	(*DynamicValue)(nil),                                         // 35: terraform1.DynamicValue
	(*DynamicValueChange)(nil),                                   // 36: terraform1.DynamicValueChange
	(*DynamicValueWithSource)(nil),                               // 37: terraform1.DynamicValueWithSource
	(*AttributePath)(nil),                                        // 38: terraform1.AttributePath
	(*ComponentInstanceInStackAddr)(nil),                         // 39: terraform1.ComponentInstanceInStackAddr
	(*ResourceInstanceInStackAddr)(nil),                          // 40: terraform1.ResourceInstanceInStackAddr
	(*SourceAddress)(nil),                                        // 41: terraform1.SourceAddress
	(*PlannedChange)(nil),                                        // 42: terraform1.PlannedChange
	(*AppliedChange)(nil),                                        // 43: terraform1.AppliedChange
	(*Diagnostic)(nil),                                           // 44: terraform1.Diagnostic
	(*SourceRange)(nil),                                          // 45: terraform1.SourceRange
	(*SourcePos)(nil),                                            // 46: terraform1.SourcePos
	(*Schema)(nil),                                               // 47: terraform1.Schema
	(*ComponentInstanceStatus)(nil),                              // 48: terraform1.ComponentInstanceStatus
	(*ResourceInstanceStatus)(nil),                               // 49: terraform1.ResourceInstanceStatus
	(*ResourceInstancePlannedChange)(nil),                        // 50: terraform1.ResourceInstancePlannedChange
	(*ProvisionerStatus)(nil),                                    // 51: terraform1.ProvisionerStatus
	(*ProvisionerOutput)(nil),                                    // 52: terraform1.ProvisionerOutput
	(*Handshake_Request)(nil),                                    // 53: terraform1.Handshake.Request
	(*Handshake_Response)(nil),                                   // 54: terraform1.Handshake.Response
	(*OpenSourceBundle_Request)(nil),                             // 55: terraform1.OpenSourceBundle.Request
	(*OpenSourceBundle_Response)(nil),                            // 56: terraform1.OpenSourceBundle.Response
	(*CloseSourceBundle_Request)(nil),                            // 57: terraform1.CloseSourceBundle.Request
	(*CloseSourceBundle_Response)(nil),                           // 58: terraform1.CloseSourceBundle.Response
	(*OpenDependencyLockFile_Request)(nil),                       // 59: terraform1.OpenDependencyLockFile.Request
	(*OpenDependencyLockFile_Response)(nil),                      // 60: terraform1.OpenDependencyLockFile.Response
	(*CreateDependencyLocks_Request)(nil),                        // 61: terraform1.CreateDependencyLocks.Request
	(*CreateDependencyLocks_Response)(nil),                       // 62: terraform1.CreateDependencyLocks.Response
	(*CloseDependencyLocks_Request)(nil),                         // 63: terraform1.CloseDependencyLocks.Request
	(*CloseDependencyLocks_Response)(nil),                        // 64: terraform1.CloseDependencyLocks.Response
	(*GetLockedProviderDependencies_Request)(nil),                // 65: terraform1.GetLockedProviderDependencies.Request
	(*GetLockedProviderDependencies_Response)(nil),               // 66: terraform1.GetLockedProviderDependencies.Response
	(*BuildProviderPluginCache_Request)(nil),                     // 67: terraform1.BuildProviderPluginCache.Request
	(*BuildProviderPluginCache_Event)(nil),                       // 68: terraform1.BuildProviderPluginCache.Event
	(*BuildProviderPluginCache_Request_InstallMethod)(nil),       // 69: terraform1.BuildProviderPluginCache.Request.InstallMethod
	(*BuildProviderPluginCache_Event_Pending)(nil),               // 70: terraform1.BuildProviderPluginCache.Event.Pending
	(*BuildProviderPluginCache_Event_ProviderConstraints)(nil),   // 71: terraform1.BuildProviderPluginCache.Event.ProviderConstraints
	(*BuildProviderPluginCache_Event_ProviderVersion)(nil),       // 72: terraform1.BuildProviderPluginCache.Event.ProviderVersion
	(*BuildProviderPluginCache_Event_ProviderWarnings)(nil),      // 73: terraform1.BuildProviderPluginCache.Event.ProviderWarnings
	(*BuildProviderPluginCache_Event_FetchBegin)(nil),            // 74: terraform1.BuildProviderPluginCache.Event.FetchBegin
	(*BuildProviderPluginCache_Event_FetchComplete)(nil),         // 75: terraform1.BuildProviderPluginCache.Event.FetchComplete
	(*OpenProviderPluginCache_Request)(nil),                      // 76: terraform1.OpenProviderPluginCache.Request
	(*OpenProviderPluginCache_Response)(nil),                     // 77: terraform1.OpenProviderPluginCache.Response
	(*CloseProviderPluginCache_Request)(nil),                     // 78: terraform1.CloseProviderPluginCache.Request
	(*CloseProviderPluginCache_Response)(nil),                    // 79: terraform1.CloseProviderPluginCache.Response
	(*GetCachedProviders_Request)(nil),                           // 80: terraform1.GetCachedProviders.Request
	(*GetCachedProviders_Response)(nil),                          // 81: terraform1.GetCachedProviders.Response
	(*GetBuiltInProviders_Request)(nil),                          // 82: terraform1.GetBuiltInProviders.Request
	(*GetBuiltInProviders_Response)(nil),                         // 83: terraform1.GetBuiltInProviders.Response
	(*GetProviderSchema_Request)(nil),                            // 84: terraform1.GetProviderSchema.Request
	(*GetProviderSchema_Response)(nil),                           // 85: terraform1.GetProviderSchema.Response
	nil,                                                          // 86: terraform1.ProviderSchema.ManagedResourceTypesEntry
	nil,                                                          // 87: terraform1.ProviderSchema.DataResourceTypesEntry
	(*OpenStackConfiguration_Request)(nil),                       // 88: terraform1.OpenStackConfiguration.Request
	(*OpenStackConfiguration_Response)(nil),                      // 89: terraform1.OpenStackConfiguration.Response
	(*CloseStackConfiguration_Request)(nil),                      // 90: terraform1.CloseStackConfiguration.Request
	(*CloseStackConfiguration_Response)(nil),                     // 91: terraform1.CloseStackConfiguration.Response
	(*FindStackConfigurationComponents_Request)(nil),             // 92: terraform1.FindStackConfigurationComponents.Request
	(*FindStackConfigurationComponents_Response)(nil),            // 93: terraform1.FindStackConfigurationComponents.Response
	(*FindStackConfigurationComponents_StackConfig)(nil),         // 94: terraform1.FindStackConfigurationComponents.StackConfig
	(*FindStackConfigurationComponents_EmbeddedStack)(nil),       // 95: terraform1.FindStackConfigurationComponents.EmbeddedStack
	(*FindStackConfigurationComponents_Component)(nil),           // 96: terraform1.FindStackConfigurationComponents.Component
	nil, // 97: terraform1.FindStackConfigurationComponents.StackConfig.ComponentsEntry
	nil, // 98: terraform1.FindStackConfigurationComponents.StackConfig.EmbeddedStacksEntry
	(*FindStackConfigurationProviders_Request)(nil),  // 99: terraform1.FindStackConfigurationProviders.Request
	(*FindStackConfigurationProviders_Response)(nil), // 100: terraform1.FindStackConfigurationProviders.Response
	(*PlanStackChanges_Request)(nil),                 // 101: terraform1.PlanStackChanges.Request
	(*PlanStackChanges_Event)(nil),                   // 102: terraform1.PlanStackChanges.Event
	nil,                                              // 103: terraform1.PlanStackChanges.Request.PreviousStateEntry
	nil,                                              // 104: terraform1.PlanStackChanges.Request.InputValuesEntry
	(*ApplyStackChanges_Request)(nil),                // 105: terraform1.ApplyStackChanges.Request
	(*ApplyStackChanges_Event)(nil),                  // 106: terraform1.ApplyStackChanges.Event
	nil,                                              // 107: terraform1.ApplyStackChanges.Request.PreviousStateEntry
	(*AttributePath_Step)(nil),                       // 108: terraform1.AttributePath.Step
	(*PlannedChange_ComponentInstance)(nil),          // 109: terraform1.PlannedChange.ComponentInstance
	(*PlannedChange_ResourceInstance)(nil),           // 110: terraform1.PlannedChange.ResourceInstance
	(*PlannedChange_OutputValue)(nil),                // 111: terraform1.PlannedChange.OutputValue
	(*PlannedChange_ResourceInstance_Moved)(nil),     // 112: terraform1.PlannedChange.ResourceInstance.Moved
	(*PlannedChange_ResourceInstance_Imported)(nil),  // 113: terraform1.PlannedChange.ResourceInstance.Imported
	(*AppliedChange_RawChange)(nil),                  // 114: terraform1.AppliedChange.RawChange
	(*AppliedChange_ChangeDescription)(nil),          // 115: terraform1.AppliedChange.ChangeDescription
	(*AppliedChange_ResourceInstance)(nil),           // 116: terraform1.AppliedChange.ResourceInstance
	(*AppliedChange_OutputValue)(nil),                // 117: terraform1.AppliedChange.OutputValue
	(*Schema_Block)(nil),                             // 118: terraform1.Schema.Block
	(*Schema_Attribute)(nil),                         // 119: terraform1.Schema.Attribute
	(*Schema_NestedBlock)(nil),                       // 120: terraform1.Schema.NestedBlock
	(*Schema_Object)(nil),                            // 121: terraform1.Schema.Object
	(*Schema_DocString)(nil),                         // 122: terraform1.Schema.DocString
	(*ResourceInstancePlannedChange_Moved)(nil),      // 123: terraform1.ResourceInstancePlannedChange.Moved
	(*ResourceInstancePlannedChange_Imported)(nil),   // 124: terraform1.ResourceInstancePlannedChange.Imported
	(*anypb.Any)(nil),                                // 125: google.protobuf.Any
}
var file_terraform1_proto_depIdxs = []int32{
	47,  // 0: terraform1.ProviderSchema.provider_config:type_name -> terraform1.Schema
	86,  // 1: terraform1.ProviderSchema.managed_resource_types:type_name -> terraform1.ProviderSchema.ManagedResourceTypesEntry
	87,  // 2: terraform1.ProviderSchema.data_resource_types:type_name -> terraform1.ProviderSchema.DataResourceTypesEntry
	38,  // 3: terraform1.DynamicValue.sensitive:type_name -> terraform1.AttributePath
	35,  // 4: terraform1.DynamicValueChange.old:type_name -> terraform1.DynamicValue
	35,  // 5: terraform1.DynamicValueChange.new:type_name -> terraform1.DynamicValue
	35,  // 6: terraform1.DynamicValueWithSource.value:type_name -> terraform1.DynamicValue
	45,  // 7: terraform1.DynamicValueWithSource.source_range:type_name -> terraform1.SourceRange
	108, // 8: terraform1.AttributePath.steps:type_name -> terraform1.AttributePath.Step
	125, // 9: terraform1.PlannedChange.raw:type_name -> google.protobuf.Any
	109, // 10: terraform1.PlannedChange.component_instance_planned:type_name -> terraform1.PlannedChange.ComponentInstance
	110, // 11: terraform1.PlannedChange.resource_instance_drifted:type_name -> terraform1.PlannedChange.ResourceInstance
	110, // 12: terraform1.PlannedChange.resource_instance_planned:type_name -> terraform1.PlannedChange.ResourceInstance
	111, // 13: terraform1.PlannedChange.output_value_planned:type_name -> terraform1.PlannedChange.OutputValue
	114, // 14: terraform1.AppliedChange.raw:type_name -> terraform1.AppliedChange.RawChange
	115, // 15: terraform1.AppliedChange.descriptions:type_name -> terraform1.AppliedChange.ChangeDescription
	5,   // 16: terraform1.Diagnostic.severity:type_name -> terraform1.Diagnostic.Severity
	45,  // 17: terraform1.Diagnostic.subject:type_name -> terraform1.SourceRange
	45,  // 18: terraform1.Diagnostic.context:type_name -> terraform1.SourceRange
	46,  // 19: terraform1.SourceRange.start:type_name -> terraform1.SourcePos
	46,  // 20: terraform1.SourceRange.end:type_name -> terraform1.SourcePos
	118, // 21: terraform1.Schema.block:type_name -> terraform1.Schema.Block
	39,  // 22: terraform1.ComponentInstanceStatus.addr:type_name -> terraform1.ComponentInstanceInStackAddr
	9,   // 23: terraform1.ComponentInstanceStatus.status:type_name -> terraform1.ComponentInstanceStatus.Status
	40,  // 24: terraform1.ResourceInstanceStatus.addr:type_name -> terraform1.ResourceInstanceInStackAddr
	10,  // 25: terraform1.ResourceInstanceStatus.status:type_name -> terraform1.ResourceInstanceStatus.Status
	40,  // 26: terraform1.ResourceInstancePlannedChange.addr:type_name -> terraform1.ResourceInstanceInStackAddr
	2,   // 27: terraform1.ResourceInstancePlannedChange.actions:type_name -> terraform1.ChangeType
	123, // 28: terraform1.ResourceInstancePlannedChange.moved:type_name -> terraform1.ResourceInstancePlannedChange.Moved
	124, // 29: terraform1.ResourceInstancePlannedChange.imported:type_name -> terraform1.ResourceInstancePlannedChange.Imported
	40,  // 30: terraform1.ProvisionerStatus.addr:type_name -> terraform1.ResourceInstanceInStackAddr
	51,  // 31: terraform1.ProvisionerStatus.status:type_name -> terraform1.ProvisionerStatus
	40,  // 32: terraform1.ProvisionerOutput.addr:type_name -> terraform1.ResourceInstanceInStackAddr
	13,  // 33: terraform1.Handshake.Request.capabilities:type_name -> terraform1.ClientCapabilities
	14,  // 34: terraform1.Handshake.Response.capabilities:type_name -> terraform1.ServerCapabilities
	41,  // 35: terraform1.OpenDependencyLockFile.Request.source_address:type_name -> terraform1.SourceAddress
	44,  // 36: terraform1.OpenDependencyLockFile.Response.diagnostics:type_name -> terraform1.Diagnostic
	27,  // 37: terraform1.CreateDependencyLocks.Request.provider_selections:type_name -> terraform1.ProviderPackage
	27,  // 38: terraform1.GetLockedProviderDependencies.Response.selected_providers:type_name -> terraform1.ProviderPackage
	69,  // 39: terraform1.BuildProviderPluginCache.Request.installation_methods:type_name -> terraform1.BuildProviderPluginCache.Request.InstallMethod
	70,  // 40: terraform1.BuildProviderPluginCache.Event.pending:type_name -> terraform1.BuildProviderPluginCache.Event.Pending
	72,  // 41: terraform1.BuildProviderPluginCache.Event.already_installed:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderVersion
	72,  // 42: terraform1.BuildProviderPluginCache.Event.built_in:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderVersion
	71,  // 43: terraform1.BuildProviderPluginCache.Event.query_begin:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderConstraints
	72,  // 44: terraform1.BuildProviderPluginCache.Event.query_success:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderVersion
	73,  // 45: terraform1.BuildProviderPluginCache.Event.query_warnings:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderWarnings
	74,  // 46: terraform1.BuildProviderPluginCache.Event.fetch_begin:type_name -> terraform1.BuildProviderPluginCache.Event.FetchBegin
	75,  // 47: terraform1.BuildProviderPluginCache.Event.fetch_complete:type_name -> terraform1.BuildProviderPluginCache.Event.FetchComplete
	44,  // 48: terraform1.BuildProviderPluginCache.Event.diagnostic:type_name -> terraform1.Diagnostic
	71,  // 49: terraform1.BuildProviderPluginCache.Event.Pending.expected:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderConstraints
	72,  // 50: terraform1.BuildProviderPluginCache.Event.FetchBegin.provider_version:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderVersion
	72,  // 51: terraform1.BuildProviderPluginCache.Event.FetchComplete.provider_version:type_name -> terraform1.BuildProviderPluginCache.Event.ProviderVersion
	3,   // 52: terraform1.BuildProviderPluginCache.Event.FetchComplete.auth_result:type_name -> terraform1.BuildProviderPluginCache.Event.FetchComplete.AuthResult
	27,  // 53: terraform1.GetCachedProviders.Response.available_providers:type_name -> terraform1.ProviderPackage
	27,  // 54: terraform1.GetBuiltInProviders.Response.available_providers:type_name -> terraform1.ProviderPackage
	28,  // 55: terraform1.GetProviderSchema.Response.schema:type_name -> terraform1.ProviderSchema
	47,  // 56: terraform1.ProviderSchema.ManagedResourceTypesEntry.value:type_name -> terraform1.Schema
	47,  // 57: terraform1.ProviderSchema.DataResourceTypesEntry.value:type_name -> terraform1.Schema
	41,  // 58: terraform1.OpenStackConfiguration.Request.source_address:type_name -> terraform1.SourceAddress
	44,  // 59: terraform1.OpenStackConfiguration.Response.diagnostics:type_name -> terraform1.Diagnostic
	94,  // 60: terraform1.FindStackConfigurationComponents.Response.config:type_name -> terraform1.FindStackConfigurationComponents.StackConfig
	97,  // 61: terraform1.FindStackConfigurationComponents.StackConfig.components:type_name -> terraform1.FindStackConfigurationComponents.StackConfig.ComponentsEntry
	98,  // 62: terraform1.FindStackConfigurationComponents.StackConfig.embedded_stacks:type_name -> terraform1.FindStackConfigurationComponents.StackConfig.EmbeddedStacksEntry
	4,   // 63: terraform1.FindStackConfigurationComponents.EmbeddedStack.instances:type_name -> terraform1.FindStackConfigurationComponents.Instances
	94,  // 64: terraform1.FindStackConfigurationComponents.EmbeddedStack.config:type_name -> terraform1.FindStackConfigurationComponents.StackConfig
	4,   // 65: terraform1.FindStackConfigurationComponents.Component.instances:type_name -> terraform1.FindStackConfigurationComponents.Instances
	96,  // 66: terraform1.FindStackConfigurationComponents.StackConfig.ComponentsEntry.value:type_name -> terraform1.FindStackConfigurationComponents.Component
	95,  // 67: terraform1.FindStackConfigurationComponents.StackConfig.EmbeddedStacksEntry.value:type_name -> terraform1.FindStackConfigurationComponents.EmbeddedStack
	1,   // 68: terraform1.PlanStackChanges.Request.plan_mode:type_name -> terraform1.PlanMode
	103, // 69: terraform1.PlanStackChanges.Request.previous_state:type_name -> terraform1.PlanStackChanges.Request.PreviousStateEntry
	104, // 70: terraform1.PlanStackChanges.Request.input_values:type_name -> terraform1.PlanStackChanges.Request.InputValuesEntry
	42,  // 71: terraform1.PlanStackChanges.Event.planned_change:type_name -> terraform1.PlannedChange
	44,  // 72: terraform1.PlanStackChanges.Event.diagnostic:type_name -> terraform1.Diagnostic
	48,  // 73: terraform1.PlanStackChanges.Event.component_instance_status:type_name -> terraform1.ComponentInstanceStatus
	49,  // 74: terraform1.PlanStackChanges.Event.resource_instance_status:type_name -> terraform1.ResourceInstanceStatus
	50,  // 75: terraform1.PlanStackChanges.Event.resource_instance_planned_change:type_name -> terraform1.ResourceInstancePlannedChange
	51,  // 76: terraform1.PlanStackChanges.Event.provisioner_status:type_name -> terraform1.ProvisionerStatus
	52,  // 77: terraform1.PlanStackChanges.Event.provisioner_output:type_name -> terraform1.ProvisionerOutput
	125, // 78: terraform1.PlanStackChanges.Request.PreviousStateEntry.value:type_name -> google.protobuf.Any
	37,  // 79: terraform1.PlanStackChanges.Request.InputValuesEntry.value:type_name -> terraform1.DynamicValueWithSource
	107, // 80: terraform1.ApplyStackChanges.Request.previous_state:type_name -> terraform1.ApplyStackChanges.Request.PreviousStateEntry
	125, // 81: terraform1.ApplyStackChanges.Request.planned_changes:type_name -> google.protobuf.Any
	43,  // 82: terraform1.ApplyStackChanges.Event.applied_change:type_name -> terraform1.AppliedChange
	44,  // 83: terraform1.ApplyStackChanges.Event.diagnostic:type_name -> terraform1.Diagnostic
	125, // 84: terraform1.ApplyStackChanges.Request.PreviousStateEntry.value:type_name -> google.protobuf.Any
	39,  // 85: terraform1.PlannedChange.ComponentInstance.addr:type_name -> terraform1.ComponentInstanceInStackAddr
	2,   // 86: terraform1.PlannedChange.ComponentInstance.actions:type_name -> terraform1.ChangeType
	40,  // 87: terraform1.PlannedChange.ResourceInstance.addr:type_name -> terraform1.ResourceInstanceInStackAddr
	2,   // 88: terraform1.PlannedChange.ResourceInstance.actions:type_name -> terraform1.ChangeType
	36,  // 89: terraform1.PlannedChange.ResourceInstance.values:type_name -> terraform1.DynamicValueChange
	112, // 90: terraform1.PlannedChange.ResourceInstance.moved:type_name -> terraform1.PlannedChange.ResourceInstance.Moved
	113, // 91: terraform1.PlannedChange.ResourceInstance.imported:type_name -> terraform1.PlannedChange.ResourceInstance.Imported
	0,   // 92: terraform1.PlannedChange.ResourceInstance.resource_mode:type_name -> terraform1.ResourceMode
	2,   // 93: terraform1.PlannedChange.OutputValue.actions:type_name -> terraform1.ChangeType
	36,  // 94: terraform1.PlannedChange.OutputValue.values:type_name -> terraform1.DynamicValueChange
	40,  // 95: terraform1.PlannedChange.ResourceInstance.Moved.prev_addr:type_name -> terraform1.ResourceInstanceInStackAddr
	125, // 96: terraform1.AppliedChange.RawChange.value:type_name -> google.protobuf.Any
	116, // 97: terraform1.AppliedChange.ChangeDescription.resource_instance:type_name -> terraform1.AppliedChange.ResourceInstance
	117, // 98: terraform1.AppliedChange.ChangeDescription.output_value:type_name -> terraform1.AppliedChange.OutputValue
	40,  // 99: terraform1.AppliedChange.ResourceInstance.addr:type_name -> terraform1.ResourceInstanceInStackAddr
	35,  // 100: terraform1.AppliedChange.ResourceInstance.new_value:type_name -> terraform1.DynamicValue
	35,  // 101: terraform1.AppliedChange.OutputValue.new_value:type_name -> terraform1.DynamicValue
	119, // 102: terraform1.Schema.Block.attributes:type_name -> terraform1.Schema.Attribute
	120, // 103: terraform1.Schema.Block.block_types:type_name -> terraform1.Schema.NestedBlock
	122, // 104: terraform1.Schema.Block.description:type_name -> terraform1.Schema.DocString
	121, // 105: terraform1.Schema.Attribute.nested_type:type_name -> terraform1.Schema.Object
	122, // 106: terraform1.Schema.Attribute.description:type_name -> terraform1.Schema.DocString
	118, // 107: terraform1.Schema.NestedBlock.block:type_name -> terraform1.Schema.Block
	6,   // 108: terraform1.Schema.NestedBlock.nesting:type_name -> terraform1.Schema.NestedBlock.NestingMode
	119, // 109: terraform1.Schema.Object.attributes:type_name -> terraform1.Schema.Attribute
	7,   // 110: terraform1.Schema.Object.nesting:type_name -> terraform1.Schema.Object.NestingMode
	8,   // 111: terraform1.Schema.DocString.format:type_name -> terraform1.Schema.DocString.Format
	40,  // 112: terraform1.ResourceInstancePlannedChange.Moved.prev_addr:type_name -> terraform1.ResourceInstanceInStackAddr
	53,  // 113: terraform1.Setup.Handshake:input_type -> terraform1.Handshake.Request
	55,  // 114: terraform1.Dependencies.OpenSourceBundle:input_type -> terraform1.OpenSourceBundle.Request
	57,  // 115: terraform1.Dependencies.CloseSourceBundle:input_type -> terraform1.CloseSourceBundle.Request
	59,  // 116: terraform1.Dependencies.OpenDependencyLockFile:input_type -> terraform1.OpenDependencyLockFile.Request
	61,  // 117: terraform1.Dependencies.CreateDependencyLocks:input_type -> terraform1.CreateDependencyLocks.Request
	63,  // 118: terraform1.Dependencies.CloseDependencyLocks:input_type -> terraform1.CloseDependencyLocks.Request
	65,  // 119: terraform1.Dependencies.GetLockedProviderDependencies:input_type -> terraform1.GetLockedProviderDependencies.Request
	67,  // 120: terraform1.Dependencies.BuildProviderPluginCache:input_type -> terraform1.BuildProviderPluginCache.Request
	76,  // 121: terraform1.Dependencies.OpenProviderPluginCache:input_type -> terraform1.OpenProviderPluginCache.Request
	78,  // 122: terraform1.Dependencies.CloseProviderPluginCache:input_type -> terraform1.CloseProviderPluginCache.Request
	80,  // 123: terraform1.Dependencies.GetCachedProviders:input_type -> terraform1.GetCachedProviders.Request
	82,  // 124: terraform1.Dependencies.GetBuiltInProviders:input_type -> terraform1.GetBuiltInProviders.Request
	84,  // 125: terraform1.Dependencies.GetProviderSchema:input_type -> terraform1.GetProviderSchema.Request
	88,  // 126: terraform1.Stacks.OpenStackConfiguration:input_type -> terraform1.OpenStackConfiguration.Request
	90,  // 127: terraform1.Stacks.CloseStackConfiguration:input_type -> terraform1.CloseStackConfiguration.Request
	99,  // 128: terraform1.Stacks.FindStackConfigurationProviders:input_type -> terraform1.FindStackConfigurationProviders.Request
	92,  // 129: terraform1.Stacks.FindStackConfigurationComponents:input_type -> terraform1.FindStackConfigurationComponents.Request
	101, // 130: terraform1.Stacks.PlanStackChanges:input_type -> terraform1.PlanStackChanges.Request
	105, // 131: terraform1.Stacks.ApplyStackChanges:input_type -> terraform1.ApplyStackChanges.Request
	54,  // 132: terraform1.Setup.Handshake:output_type -> terraform1.Handshake.Response
	56,  // 133: terraform1.Dependencies.OpenSourceBundle:output_type -> terraform1.OpenSourceBundle.Response
	58,  // 134: terraform1.Dependencies.CloseSourceBundle:output_type -> terraform1.CloseSourceBundle.Response
	60,  // 135: terraform1.Dependencies.OpenDependencyLockFile:output_type -> terraform1.OpenDependencyLockFile.Response
	62,  // 136: terraform1.Dependencies.CreateDependencyLocks:output_type -> terraform1.CreateDependencyLocks.Response
	64,  // 137: terraform1.Dependencies.CloseDependencyLocks:output_type -> terraform1.CloseDependencyLocks.Response
	66,  // 138: terraform1.Dependencies.GetLockedProviderDependencies:output_type -> terraform1.GetLockedProviderDependencies.Response
	68,  // 139: terraform1.Dependencies.BuildProviderPluginCache:output_type -> terraform1.BuildProviderPluginCache.Event
	77,  // 140: terraform1.Dependencies.OpenProviderPluginCache:output_type -> terraform1.OpenProviderPluginCache.Response
	79,  // 141: terraform1.Dependencies.CloseProviderPluginCache:output_type -> terraform1.CloseProviderPluginCache.Response
	81,  // 142: terraform1.Dependencies.GetCachedProviders:output_type -> terraform1.GetCachedProviders.Response
	83,  // 143: terraform1.Dependencies.GetBuiltInProviders:output_type -> terraform1.GetBuiltInProviders.Response
	85,  // 144: terraform1.Dependencies.GetProviderSchema:output_type -> terraform1.GetProviderSchema.Response
	89,  // 145: terraform1.Stacks.OpenStackConfiguration:output_type -> terraform1.OpenStackConfiguration.Response
	91,  // 146: terraform1.Stacks.CloseStackConfiguration:output_type -> terraform1.CloseStackConfiguration.Response
	100, // 147: terraform1.Stacks.FindStackConfigurationProviders:output_type -> terraform1.FindStackConfigurationProviders.Response
	93,  // 148: terraform1.Stacks.FindStackConfigurationComponents:output_type -> terraform1.FindStackConfigurationComponents.Response
	102, // 149: terraform1.Stacks.PlanStackChanges:output_type -> terraform1.PlanStackChanges.Event
	106, // 150: terraform1.Stacks.ApplyStackChanges:output_type -> terraform1.ApplyStackChanges.Event
	132, // [132:151] is the sub-list for method output_type
	113, // [113:132] is the sub-list for method input_type
	113, // [113:113] is the sub-list for extension type_name
	113, // [113:113] is the sub-list for extension extendee
	0,   // [0:113] is the sub-list for field type_name
}

func init() { file_terraform1_proto_init() }
func file_terraform1_proto_init() {
	if File_terraform1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_terraform1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSourceBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSourceBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDependencyLockFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDependencyLocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDependencyLocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockedProviderDependencies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenProviderPluginCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseProviderPluginCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCachedProviders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuiltInProviders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenStackConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseStackConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationComponents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationProviders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanStackChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyStackChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicValueChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicValueWithSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentInstanceInStackAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInstanceInStackAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourcePos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentInstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInstancePlannedChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionerOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handshake_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handshake_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSourceBundle_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenSourceBundle_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSourceBundle_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseSourceBundle_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDependencyLockFile_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDependencyLockFile_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDependencyLocks_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDependencyLocks_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDependencyLocks_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDependencyLocks_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockedProviderDependencies_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLockedProviderDependencies_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Request_InstallMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event_Pending); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event_ProviderConstraints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event_ProviderVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event_ProviderWarnings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event_FetchBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildProviderPluginCache_Event_FetchComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenProviderPluginCache_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenProviderPluginCache_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseProviderPluginCache_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseProviderPluginCache_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCachedProviders_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCachedProviders_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuiltInProviders_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuiltInProviders_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderSchema_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProviderSchema_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenStackConfiguration_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenStackConfiguration_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseStackConfiguration_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseStackConfiguration_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationComponents_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationComponents_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationComponents_StackConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationComponents_EmbeddedStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationComponents_Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationProviders_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindStackConfigurationProviders_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanStackChanges_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanStackChanges_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyStackChanges_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyStackChanges_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributePath_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedChange_ComponentInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedChange_ResourceInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedChange_OutputValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedChange_ResourceInstance_Moved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlannedChange_ResourceInstance_Imported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedChange_RawChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedChange_ChangeDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedChange_ResourceInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppliedChange_OutputValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema_NestedBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema_DocString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInstancePlannedChange_Moved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_terraform1_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInstancePlannedChange_Imported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_terraform1_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*PlannedChange_ComponentInstancePlanned)(nil),
		(*PlannedChange_ResourceInstanceDrifted)(nil),
		(*PlannedChange_ResourceInstancePlanned)(nil),
		(*PlannedChange_OutputValuePlanned)(nil),
		(*PlannedChange_PlanApplyable)(nil),
	}
	file_terraform1_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*BuildProviderPluginCache_Event_Pending_)(nil),
		(*BuildProviderPluginCache_Event_AlreadyInstalled)(nil),
		(*BuildProviderPluginCache_Event_BuiltIn)(nil),
		(*BuildProviderPluginCache_Event_QueryBegin)(nil),
		(*BuildProviderPluginCache_Event_QuerySuccess)(nil),
		(*BuildProviderPluginCache_Event_QueryWarnings)(nil),
		(*BuildProviderPluginCache_Event_FetchBegin_)(nil),
		(*BuildProviderPluginCache_Event_FetchComplete_)(nil),
		(*BuildProviderPluginCache_Event_Diagnostic)(nil),
	}
	file_terraform1_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*BuildProviderPluginCache_Request_InstallMethod_Direct)(nil),
		(*BuildProviderPluginCache_Request_InstallMethod_LocalMirrorDir)(nil),
		(*BuildProviderPluginCache_Request_InstallMethod_NetworkMirrorUrl)(nil),
	}
	file_terraform1_proto_msgTypes[90].OneofWrappers = []interface{}{
		(*PlanStackChanges_Event_PlannedChange)(nil),
		(*PlanStackChanges_Event_Diagnostic)(nil),
		(*PlanStackChanges_Event_ComponentInstanceStatus)(nil),
		(*PlanStackChanges_Event_ResourceInstanceStatus)(nil),
		(*PlanStackChanges_Event_ResourceInstancePlannedChange)(nil),
		(*PlanStackChanges_Event_ProvisionerStatus)(nil),
		(*PlanStackChanges_Event_ProvisionerOutput)(nil),
	}
	file_terraform1_proto_msgTypes[94].OneofWrappers = []interface{}{
		(*ApplyStackChanges_Event_AppliedChange)(nil),
		(*ApplyStackChanges_Event_Diagnostic)(nil),
	}
	file_terraform1_proto_msgTypes[96].OneofWrappers = []interface{}{
		(*AttributePath_Step_AttributeName)(nil),
		(*AttributePath_Step_ElementKeyString)(nil),
		(*AttributePath_Step_ElementKeyInt)(nil),
	}
	file_terraform1_proto_msgTypes[103].OneofWrappers = []interface{}{
		(*AppliedChange_ChangeDescription_ResourceInstance)(nil),
		(*AppliedChange_ChangeDescription_OutputValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_terraform1_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   113,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_terraform1_proto_goTypes,
		DependencyIndexes: file_terraform1_proto_depIdxs,
		EnumInfos:         file_terraform1_proto_enumTypes,
		MessageInfos:      file_terraform1_proto_msgTypes,
	}.Build()
	File_terraform1_proto = out.File
	file_terraform1_proto_rawDesc = nil
	file_terraform1_proto_goTypes = nil
	file_terraform1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SetupClient is the client API for Setup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SetupClient interface {
	// Clients must call Handshake before any other function of any other
	// service, to complete the capability negotiation step that may
	// then affect the behaviors of subsequent operations.
	//
	// This function can be called only once per RPC server.
	Handshake(ctx context.Context, in *Handshake_Request, opts ...grpc.CallOption) (*Handshake_Response, error)
}

type setupClient struct {
	cc grpc.ClientConnInterface
}

func NewSetupClient(cc grpc.ClientConnInterface) SetupClient {
	return &setupClient{cc}
}

func (c *setupClient) Handshake(ctx context.Context, in *Handshake_Request, opts ...grpc.CallOption) (*Handshake_Response, error) {
	out := new(Handshake_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Setup/Handshake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SetupServer is the server API for Setup service.
type SetupServer interface {
	// Clients must call Handshake before any other function of any other
	// service, to complete the capability negotiation step that may
	// then affect the behaviors of subsequent operations.
	//
	// This function can be called only once per RPC server.
	Handshake(context.Context, *Handshake_Request) (*Handshake_Response, error)
}

// UnimplementedSetupServer can be embedded to have forward compatible implementations.
type UnimplementedSetupServer struct {
}

func (*UnimplementedSetupServer) Handshake(context.Context, *Handshake_Request) (*Handshake_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handshake not implemented")
}

func RegisterSetupServer(s *grpc.Server, srv SetupServer) {
	s.RegisterService(&_Setup_serviceDesc, srv)
}

func _Setup_Handshake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Handshake_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetupServer).Handshake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Setup/Handshake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetupServer).Handshake(ctx, req.(*Handshake_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Setup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terraform1.Setup",
	HandlerType: (*SetupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handshake",
			Handler:    _Setup_Handshake_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "terraform1.proto",
}

// DependenciesClient is the client API for Dependencies service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DependenciesClient interface {
	// Opens a source bundle that was already extracted into the filesystem
	// somewhere, returning an opaque source bundle handle that can be used for
	// subsequent operations.
	OpenSourceBundle(ctx context.Context, in *OpenSourceBundle_Request, opts ...grpc.CallOption) (*OpenSourceBundle_Response, error)
	// Closes a previously-opened source bundle, invalidating the given handle
	// and therefore making it safe to delete or modify the bundle directory
	// on disk.
	CloseSourceBundle(ctx context.Context, in *CloseSourceBundle_Request, opts ...grpc.CallOption) (*CloseSourceBundle_Response, error)
	// Reads and parses an existing dependency lock file from the filesystem,
	// returning a dependency locks handle.
	//
	// This function parses a user-provided source file, and so invalid content
	// in that file is treated as diagnostics in a successful response rather
	// than as an RPC error. Callers must check whether the dependency locks
	// handle in the response is set (non-zero) before using it, and treat
	// an unset handle as indicating a user error which is described in the
	// accompanying diagnostics. Diagnostics can also be returned along with
	// a valid handle, e.g. if there are non-blocking warning diagnostics.
	OpenDependencyLockFile(ctx context.Context, in *OpenDependencyLockFile_Request, opts ...grpc.CallOption) (*OpenDependencyLockFile_Response, error)
	// Creates an in-memory-only dependency locks handle with a fixed set of
	// dependency selections provided as arguments.
	CreateDependencyLocks(ctx context.Context, in *CreateDependencyLocks_Request, opts ...grpc.CallOption) (*CreateDependencyLocks_Response, error)
	CloseDependencyLocks(ctx context.Context, in *CloseDependencyLocks_Request, opts ...grpc.CallOption) (*CloseDependencyLocks_Response, error)
	// Returns information about the provider version selections in a
	// dependency locks object.
	GetLockedProviderDependencies(ctx context.Context, in *GetLockedProviderDependencies_Request, opts ...grpc.CallOption) (*GetLockedProviderDependencies_Response, error)
	// Populates a new provider plugin cache directory in the local filesystem
	// based on the provider version selections in a given dependency locks
	// object.
	//
	// This particular RPC can only install already-selected provider packages
	// recorded in a dependency locks object; it does not support "upgrading"
	// provider selections to newer versions as a CLI user would do with
	// "terraform init -upgrade", because there would be no way to then
	// commit the updated locks to disk as a lock file.
	BuildProviderPluginCache(ctx context.Context, in *BuildProviderPluginCache_Request, opts ...grpc.CallOption) (Dependencies_BuildProviderPluginCacheClient, error)
	// Opens an existing local filesystem directory as a provider plugin cache
	// directory, returning a plugin cache handle that can be used with other
	// RPC operations.
	OpenProviderPluginCache(ctx context.Context, in *OpenProviderPluginCache_Request, opts ...grpc.CallOption) (*OpenProviderPluginCache_Response, error)
	CloseProviderPluginCache(ctx context.Context, in *CloseProviderPluginCache_Request, opts ...grpc.CallOption) (*CloseProviderPluginCache_Response, error)
	// Returns information about the specific provider packages that are
	// available in the given provider plugin cache.
	GetCachedProviders(ctx context.Context, in *GetCachedProviders_Request, opts ...grpc.CallOption) (*GetCachedProviders_Response, error)
	// Returns information about the built-in providers that are compiled in
	// to this Terraform Core server.
	GetBuiltInProviders(ctx context.Context, in *GetBuiltInProviders_Request, opts ...grpc.CallOption) (*GetBuiltInProviders_Response, error)
	// Returns a description of the schema for a particular provider in a
	// given provider plugin cache, or of a particular built-in provider
	// known to this version of Terraform Core.
	//
	// WARNING: This operation requires executing the selected provider plugin,
	// which therefore allows it to run arbitrary code as a child process of
	// this Terraform Core server, with access to all of the same resources.
	// This should typically be used only with providers explicitly selected
	// in a dependency lock file, so users can control what external code
	// has the potential to run in a context that probably has access to
	// private source code and other sensitive information.
	GetProviderSchema(ctx context.Context, in *GetProviderSchema_Request, opts ...grpc.CallOption) (*GetProviderSchema_Response, error)
}

type dependenciesClient struct {
	cc grpc.ClientConnInterface
}

func NewDependenciesClient(cc grpc.ClientConnInterface) DependenciesClient {
	return &dependenciesClient{cc}
}

func (c *dependenciesClient) OpenSourceBundle(ctx context.Context, in *OpenSourceBundle_Request, opts ...grpc.CallOption) (*OpenSourceBundle_Response, error) {
	out := new(OpenSourceBundle_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/OpenSourceBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) CloseSourceBundle(ctx context.Context, in *CloseSourceBundle_Request, opts ...grpc.CallOption) (*CloseSourceBundle_Response, error) {
	out := new(CloseSourceBundle_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/CloseSourceBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) OpenDependencyLockFile(ctx context.Context, in *OpenDependencyLockFile_Request, opts ...grpc.CallOption) (*OpenDependencyLockFile_Response, error) {
	out := new(OpenDependencyLockFile_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/OpenDependencyLockFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) CreateDependencyLocks(ctx context.Context, in *CreateDependencyLocks_Request, opts ...grpc.CallOption) (*CreateDependencyLocks_Response, error) {
	out := new(CreateDependencyLocks_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/CreateDependencyLocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) CloseDependencyLocks(ctx context.Context, in *CloseDependencyLocks_Request, opts ...grpc.CallOption) (*CloseDependencyLocks_Response, error) {
	out := new(CloseDependencyLocks_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/CloseDependencyLocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) GetLockedProviderDependencies(ctx context.Context, in *GetLockedProviderDependencies_Request, opts ...grpc.CallOption) (*GetLockedProviderDependencies_Response, error) {
	out := new(GetLockedProviderDependencies_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/GetLockedProviderDependencies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) BuildProviderPluginCache(ctx context.Context, in *BuildProviderPluginCache_Request, opts ...grpc.CallOption) (Dependencies_BuildProviderPluginCacheClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dependencies_serviceDesc.Streams[0], "/terraform1.Dependencies/BuildProviderPluginCache", opts...)
	if err != nil {
		return nil, err
	}
	x := &dependenciesBuildProviderPluginCacheClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Dependencies_BuildProviderPluginCacheClient interface {
	Recv() (*BuildProviderPluginCache_Event, error)
	grpc.ClientStream
}

type dependenciesBuildProviderPluginCacheClient struct {
	grpc.ClientStream
}

func (x *dependenciesBuildProviderPluginCacheClient) Recv() (*BuildProviderPluginCache_Event, error) {
	m := new(BuildProviderPluginCache_Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dependenciesClient) OpenProviderPluginCache(ctx context.Context, in *OpenProviderPluginCache_Request, opts ...grpc.CallOption) (*OpenProviderPluginCache_Response, error) {
	out := new(OpenProviderPluginCache_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/OpenProviderPluginCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) CloseProviderPluginCache(ctx context.Context, in *CloseProviderPluginCache_Request, opts ...grpc.CallOption) (*CloseProviderPluginCache_Response, error) {
	out := new(CloseProviderPluginCache_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/CloseProviderPluginCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) GetCachedProviders(ctx context.Context, in *GetCachedProviders_Request, opts ...grpc.CallOption) (*GetCachedProviders_Response, error) {
	out := new(GetCachedProviders_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/GetCachedProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) GetBuiltInProviders(ctx context.Context, in *GetBuiltInProviders_Request, opts ...grpc.CallOption) (*GetBuiltInProviders_Response, error) {
	out := new(GetBuiltInProviders_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/GetBuiltInProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependenciesClient) GetProviderSchema(ctx context.Context, in *GetProviderSchema_Request, opts ...grpc.CallOption) (*GetProviderSchema_Response, error) {
	out := new(GetProviderSchema_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Dependencies/GetProviderSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DependenciesServer is the server API for Dependencies service.
type DependenciesServer interface {
	// Opens a source bundle that was already extracted into the filesystem
	// somewhere, returning an opaque source bundle handle that can be used for
	// subsequent operations.
	OpenSourceBundle(context.Context, *OpenSourceBundle_Request) (*OpenSourceBundle_Response, error)
	// Closes a previously-opened source bundle, invalidating the given handle
	// and therefore making it safe to delete or modify the bundle directory
	// on disk.
	CloseSourceBundle(context.Context, *CloseSourceBundle_Request) (*CloseSourceBundle_Response, error)
	// Reads and parses an existing dependency lock file from the filesystem,
	// returning a dependency locks handle.
	//
	// This function parses a user-provided source file, and so invalid content
	// in that file is treated as diagnostics in a successful response rather
	// than as an RPC error. Callers must check whether the dependency locks
	// handle in the response is set (non-zero) before using it, and treat
	// an unset handle as indicating a user error which is described in the
	// accompanying diagnostics. Diagnostics can also be returned along with
	// a valid handle, e.g. if there are non-blocking warning diagnostics.
	OpenDependencyLockFile(context.Context, *OpenDependencyLockFile_Request) (*OpenDependencyLockFile_Response, error)
	// Creates an in-memory-only dependency locks handle with a fixed set of
	// dependency selections provided as arguments.
	CreateDependencyLocks(context.Context, *CreateDependencyLocks_Request) (*CreateDependencyLocks_Response, error)
	CloseDependencyLocks(context.Context, *CloseDependencyLocks_Request) (*CloseDependencyLocks_Response, error)
	// Returns information about the provider version selections in a
	// dependency locks object.
	GetLockedProviderDependencies(context.Context, *GetLockedProviderDependencies_Request) (*GetLockedProviderDependencies_Response, error)
	// Populates a new provider plugin cache directory in the local filesystem
	// based on the provider version selections in a given dependency locks
	// object.
	//
	// This particular RPC can only install already-selected provider packages
	// recorded in a dependency locks object; it does not support "upgrading"
	// provider selections to newer versions as a CLI user would do with
	// "terraform init -upgrade", because there would be no way to then
	// commit the updated locks to disk as a lock file.
	BuildProviderPluginCache(*BuildProviderPluginCache_Request, Dependencies_BuildProviderPluginCacheServer) error
	// Opens an existing local filesystem directory as a provider plugin cache
	// directory, returning a plugin cache handle that can be used with other
	// RPC operations.
	OpenProviderPluginCache(context.Context, *OpenProviderPluginCache_Request) (*OpenProviderPluginCache_Response, error)
	CloseProviderPluginCache(context.Context, *CloseProviderPluginCache_Request) (*CloseProviderPluginCache_Response, error)
	// Returns information about the specific provider packages that are
	// available in the given provider plugin cache.
	GetCachedProviders(context.Context, *GetCachedProviders_Request) (*GetCachedProviders_Response, error)
	// Returns information about the built-in providers that are compiled in
	// to this Terraform Core server.
	GetBuiltInProviders(context.Context, *GetBuiltInProviders_Request) (*GetBuiltInProviders_Response, error)
	// Returns a description of the schema for a particular provider in a
	// given provider plugin cache, or of a particular built-in provider
	// known to this version of Terraform Core.
	//
	// WARNING: This operation requires executing the selected provider plugin,
	// which therefore allows it to run arbitrary code as a child process of
	// this Terraform Core server, with access to all of the same resources.
	// This should typically be used only with providers explicitly selected
	// in a dependency lock file, so users can control what external code
	// has the potential to run in a context that probably has access to
	// private source code and other sensitive information.
	GetProviderSchema(context.Context, *GetProviderSchema_Request) (*GetProviderSchema_Response, error)
}

// UnimplementedDependenciesServer can be embedded to have forward compatible implementations.
type UnimplementedDependenciesServer struct {
}

func (*UnimplementedDependenciesServer) OpenSourceBundle(context.Context, *OpenSourceBundle_Request) (*OpenSourceBundle_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenSourceBundle not implemented")
}
func (*UnimplementedDependenciesServer) CloseSourceBundle(context.Context, *CloseSourceBundle_Request) (*CloseSourceBundle_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSourceBundle not implemented")
}
func (*UnimplementedDependenciesServer) OpenDependencyLockFile(context.Context, *OpenDependencyLockFile_Request) (*OpenDependencyLockFile_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenDependencyLockFile not implemented")
}
func (*UnimplementedDependenciesServer) CreateDependencyLocks(context.Context, *CreateDependencyLocks_Request) (*CreateDependencyLocks_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDependencyLocks not implemented")
}
func (*UnimplementedDependenciesServer) CloseDependencyLocks(context.Context, *CloseDependencyLocks_Request) (*CloseDependencyLocks_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseDependencyLocks not implemented")
}
func (*UnimplementedDependenciesServer) GetLockedProviderDependencies(context.Context, *GetLockedProviderDependencies_Request) (*GetLockedProviderDependencies_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLockedProviderDependencies not implemented")
}
func (*UnimplementedDependenciesServer) BuildProviderPluginCache(*BuildProviderPluginCache_Request, Dependencies_BuildProviderPluginCacheServer) error {
	return status.Errorf(codes.Unimplemented, "method BuildProviderPluginCache not implemented")
}
func (*UnimplementedDependenciesServer) OpenProviderPluginCache(context.Context, *OpenProviderPluginCache_Request) (*OpenProviderPluginCache_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenProviderPluginCache not implemented")
}
func (*UnimplementedDependenciesServer) CloseProviderPluginCache(context.Context, *CloseProviderPluginCache_Request) (*CloseProviderPluginCache_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseProviderPluginCache not implemented")
}
func (*UnimplementedDependenciesServer) GetCachedProviders(context.Context, *GetCachedProviders_Request) (*GetCachedProviders_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCachedProviders not implemented")
}
func (*UnimplementedDependenciesServer) GetBuiltInProviders(context.Context, *GetBuiltInProviders_Request) (*GetBuiltInProviders_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuiltInProviders not implemented")
}
func (*UnimplementedDependenciesServer) GetProviderSchema(context.Context, *GetProviderSchema_Request) (*GetProviderSchema_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProviderSchema not implemented")
}

func RegisterDependenciesServer(s *grpc.Server, srv DependenciesServer) {
	s.RegisterService(&_Dependencies_serviceDesc, srv)
}

func _Dependencies_OpenSourceBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenSourceBundle_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).OpenSourceBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/OpenSourceBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).OpenSourceBundle(ctx, req.(*OpenSourceBundle_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_CloseSourceBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSourceBundle_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).CloseSourceBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/CloseSourceBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).CloseSourceBundle(ctx, req.(*CloseSourceBundle_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_OpenDependencyLockFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenDependencyLockFile_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).OpenDependencyLockFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/OpenDependencyLockFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).OpenDependencyLockFile(ctx, req.(*OpenDependencyLockFile_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_CreateDependencyLocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDependencyLocks_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).CreateDependencyLocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/CreateDependencyLocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).CreateDependencyLocks(ctx, req.(*CreateDependencyLocks_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_CloseDependencyLocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseDependencyLocks_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).CloseDependencyLocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/CloseDependencyLocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).CloseDependencyLocks(ctx, req.(*CloseDependencyLocks_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_GetLockedProviderDependencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLockedProviderDependencies_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).GetLockedProviderDependencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/GetLockedProviderDependencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).GetLockedProviderDependencies(ctx, req.(*GetLockedProviderDependencies_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_BuildProviderPluginCache_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BuildProviderPluginCache_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DependenciesServer).BuildProviderPluginCache(m, &dependenciesBuildProviderPluginCacheServer{stream})
}

type Dependencies_BuildProviderPluginCacheServer interface {
	Send(*BuildProviderPluginCache_Event) error
	grpc.ServerStream
}

type dependenciesBuildProviderPluginCacheServer struct {
	grpc.ServerStream
}

func (x *dependenciesBuildProviderPluginCacheServer) Send(m *BuildProviderPluginCache_Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Dependencies_OpenProviderPluginCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenProviderPluginCache_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).OpenProviderPluginCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/OpenProviderPluginCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).OpenProviderPluginCache(ctx, req.(*OpenProviderPluginCache_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_CloseProviderPluginCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseProviderPluginCache_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).CloseProviderPluginCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/CloseProviderPluginCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).CloseProviderPluginCache(ctx, req.(*CloseProviderPluginCache_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_GetCachedProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCachedProviders_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).GetCachedProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/GetCachedProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).GetCachedProviders(ctx, req.(*GetCachedProviders_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_GetBuiltInProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuiltInProviders_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).GetBuiltInProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/GetBuiltInProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).GetBuiltInProviders(ctx, req.(*GetBuiltInProviders_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dependencies_GetProviderSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderSchema_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependenciesServer).GetProviderSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Dependencies/GetProviderSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependenciesServer).GetProviderSchema(ctx, req.(*GetProviderSchema_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dependencies_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terraform1.Dependencies",
	HandlerType: (*DependenciesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenSourceBundle",
			Handler:    _Dependencies_OpenSourceBundle_Handler,
		},
		{
			MethodName: "CloseSourceBundle",
			Handler:    _Dependencies_CloseSourceBundle_Handler,
		},
		{
			MethodName: "OpenDependencyLockFile",
			Handler:    _Dependencies_OpenDependencyLockFile_Handler,
		},
		{
			MethodName: "CreateDependencyLocks",
			Handler:    _Dependencies_CreateDependencyLocks_Handler,
		},
		{
			MethodName: "CloseDependencyLocks",
			Handler:    _Dependencies_CloseDependencyLocks_Handler,
		},
		{
			MethodName: "GetLockedProviderDependencies",
			Handler:    _Dependencies_GetLockedProviderDependencies_Handler,
		},
		{
			MethodName: "OpenProviderPluginCache",
			Handler:    _Dependencies_OpenProviderPluginCache_Handler,
		},
		{
			MethodName: "CloseProviderPluginCache",
			Handler:    _Dependencies_CloseProviderPluginCache_Handler,
		},
		{
			MethodName: "GetCachedProviders",
			Handler:    _Dependencies_GetCachedProviders_Handler,
		},
		{
			MethodName: "GetBuiltInProviders",
			Handler:    _Dependencies_GetBuiltInProviders_Handler,
		},
		{
			MethodName: "GetProviderSchema",
			Handler:    _Dependencies_GetProviderSchema_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BuildProviderPluginCache",
			Handler:       _Dependencies_BuildProviderPluginCache_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "terraform1.proto",
}

// StacksClient is the client API for Stacks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StacksClient interface {
	// Load and perform initial static validation of a stack configuration
	// in a previously-opened source bundle. If successful, returns a
	// stack configuration handle that can be used with other operations.
	OpenStackConfiguration(ctx context.Context, in *OpenStackConfiguration_Request, opts ...grpc.CallOption) (*OpenStackConfiguration_Response, error)
	// Close a previously-opened stack configuration using its handle.
	CloseStackConfiguration(ctx context.Context, in *CloseStackConfiguration_Request, opts ...grpc.CallOption) (*CloseStackConfiguration_Response, error)
	// Analyze a stack configuration to find all of the providers that it
	// depends on.
	FindStackConfigurationProviders(ctx context.Context, in *FindStackConfigurationProviders_Request, opts ...grpc.CallOption) (*FindStackConfigurationProviders_Response, error)
	// Analyze a stack configuration to find all of the components it declares.
	// This is static analysis only, so it cannot produce dynamic information
	// such as the number of instances of each component.
	FindStackConfigurationComponents(ctx context.Context, in *FindStackConfigurationComponents_Request, opts ...grpc.CallOption) (*FindStackConfigurationComponents_Response, error)
	// Calculate a desired state from the given configuration and compare it
	// with the current state to propose a set of changes to converge the
	// current state with the desired state, at least in part.
	PlanStackChanges(ctx context.Context, in *PlanStackChanges_Request, opts ...grpc.CallOption) (Stacks_PlanStackChangesClient, error)
	// Execute the changes proposed by an earlier call to PlanStackChanges.
	ApplyStackChanges(ctx context.Context, in *ApplyStackChanges_Request, opts ...grpc.CallOption) (Stacks_ApplyStackChangesClient, error)
}

type stacksClient struct {
	cc grpc.ClientConnInterface
}

func NewStacksClient(cc grpc.ClientConnInterface) StacksClient {
	return &stacksClient{cc}
}

func (c *stacksClient) OpenStackConfiguration(ctx context.Context, in *OpenStackConfiguration_Request, opts ...grpc.CallOption) (*OpenStackConfiguration_Response, error) {
	out := new(OpenStackConfiguration_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Stacks/OpenStackConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stacksClient) CloseStackConfiguration(ctx context.Context, in *CloseStackConfiguration_Request, opts ...grpc.CallOption) (*CloseStackConfiguration_Response, error) {
	out := new(CloseStackConfiguration_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Stacks/CloseStackConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stacksClient) FindStackConfigurationProviders(ctx context.Context, in *FindStackConfigurationProviders_Request, opts ...grpc.CallOption) (*FindStackConfigurationProviders_Response, error) {
	out := new(FindStackConfigurationProviders_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Stacks/FindStackConfigurationProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stacksClient) FindStackConfigurationComponents(ctx context.Context, in *FindStackConfigurationComponents_Request, opts ...grpc.CallOption) (*FindStackConfigurationComponents_Response, error) {
	out := new(FindStackConfigurationComponents_Response)
	err := c.cc.Invoke(ctx, "/terraform1.Stacks/FindStackConfigurationComponents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stacksClient) PlanStackChanges(ctx context.Context, in *PlanStackChanges_Request, opts ...grpc.CallOption) (Stacks_PlanStackChangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stacks_serviceDesc.Streams[0], "/terraform1.Stacks/PlanStackChanges", opts...)
	if err != nil {
		return nil, err
	}
	x := &stacksPlanStackChangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stacks_PlanStackChangesClient interface {
	Recv() (*PlanStackChanges_Event, error)
	grpc.ClientStream
}

type stacksPlanStackChangesClient struct {
	grpc.ClientStream
}

func (x *stacksPlanStackChangesClient) Recv() (*PlanStackChanges_Event, error) {
	m := new(PlanStackChanges_Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *stacksClient) ApplyStackChanges(ctx context.Context, in *ApplyStackChanges_Request, opts ...grpc.CallOption) (Stacks_ApplyStackChangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stacks_serviceDesc.Streams[1], "/terraform1.Stacks/ApplyStackChanges", opts...)
	if err != nil {
		return nil, err
	}
	x := &stacksApplyStackChangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stacks_ApplyStackChangesClient interface {
	Recv() (*ApplyStackChanges_Event, error)
	grpc.ClientStream
}

type stacksApplyStackChangesClient struct {
	grpc.ClientStream
}

func (x *stacksApplyStackChangesClient) Recv() (*ApplyStackChanges_Event, error) {
	m := new(ApplyStackChanges_Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StacksServer is the server API for Stacks service.
type StacksServer interface {
	// Load and perform initial static validation of a stack configuration
	// in a previously-opened source bundle. If successful, returns a
	// stack configuration handle that can be used with other operations.
	OpenStackConfiguration(context.Context, *OpenStackConfiguration_Request) (*OpenStackConfiguration_Response, error)
	// Close a previously-opened stack configuration using its handle.
	CloseStackConfiguration(context.Context, *CloseStackConfiguration_Request) (*CloseStackConfiguration_Response, error)
	// Analyze a stack configuration to find all of the providers that it
	// depends on.
	FindStackConfigurationProviders(context.Context, *FindStackConfigurationProviders_Request) (*FindStackConfigurationProviders_Response, error)
	// Analyze a stack configuration to find all of the components it declares.
	// This is static analysis only, so it cannot produce dynamic information
	// such as the number of instances of each component.
	FindStackConfigurationComponents(context.Context, *FindStackConfigurationComponents_Request) (*FindStackConfigurationComponents_Response, error)
	// Calculate a desired state from the given configuration and compare it
	// with the current state to propose a set of changes to converge the
	// current state with the desired state, at least in part.
	PlanStackChanges(*PlanStackChanges_Request, Stacks_PlanStackChangesServer) error
	// Execute the changes proposed by an earlier call to PlanStackChanges.
	ApplyStackChanges(*ApplyStackChanges_Request, Stacks_ApplyStackChangesServer) error
}

// UnimplementedStacksServer can be embedded to have forward compatible implementations.
type UnimplementedStacksServer struct {
}

func (*UnimplementedStacksServer) OpenStackConfiguration(context.Context, *OpenStackConfiguration_Request) (*OpenStackConfiguration_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenStackConfiguration not implemented")
}
func (*UnimplementedStacksServer) CloseStackConfiguration(context.Context, *CloseStackConfiguration_Request) (*CloseStackConfiguration_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseStackConfiguration not implemented")
}
func (*UnimplementedStacksServer) FindStackConfigurationProviders(context.Context, *FindStackConfigurationProviders_Request) (*FindStackConfigurationProviders_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindStackConfigurationProviders not implemented")
}
func (*UnimplementedStacksServer) FindStackConfigurationComponents(context.Context, *FindStackConfigurationComponents_Request) (*FindStackConfigurationComponents_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindStackConfigurationComponents not implemented")
}
func (*UnimplementedStacksServer) PlanStackChanges(*PlanStackChanges_Request, Stacks_PlanStackChangesServer) error {
	return status.Errorf(codes.Unimplemented, "method PlanStackChanges not implemented")
}
func (*UnimplementedStacksServer) ApplyStackChanges(*ApplyStackChanges_Request, Stacks_ApplyStackChangesServer) error {
	return status.Errorf(codes.Unimplemented, "method ApplyStackChanges not implemented")
}

func RegisterStacksServer(s *grpc.Server, srv StacksServer) {
	s.RegisterService(&_Stacks_serviceDesc, srv)
}

func _Stacks_OpenStackConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenStackConfiguration_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StacksServer).OpenStackConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Stacks/OpenStackConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StacksServer).OpenStackConfiguration(ctx, req.(*OpenStackConfiguration_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stacks_CloseStackConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseStackConfiguration_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StacksServer).CloseStackConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Stacks/CloseStackConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StacksServer).CloseStackConfiguration(ctx, req.(*CloseStackConfiguration_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stacks_FindStackConfigurationProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindStackConfigurationProviders_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StacksServer).FindStackConfigurationProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Stacks/FindStackConfigurationProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StacksServer).FindStackConfigurationProviders(ctx, req.(*FindStackConfigurationProviders_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stacks_FindStackConfigurationComponents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindStackConfigurationComponents_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StacksServer).FindStackConfigurationComponents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terraform1.Stacks/FindStackConfigurationComponents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StacksServer).FindStackConfigurationComponents(ctx, req.(*FindStackConfigurationComponents_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stacks_PlanStackChanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PlanStackChanges_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StacksServer).PlanStackChanges(m, &stacksPlanStackChangesServer{stream})
}

type Stacks_PlanStackChangesServer interface {
	Send(*PlanStackChanges_Event) error
	grpc.ServerStream
}

type stacksPlanStackChangesServer struct {
	grpc.ServerStream
}

func (x *stacksPlanStackChangesServer) Send(m *PlanStackChanges_Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Stacks_ApplyStackChanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ApplyStackChanges_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StacksServer).ApplyStackChanges(m, &stacksApplyStackChangesServer{stream})
}

type Stacks_ApplyStackChangesServer interface {
	Send(*ApplyStackChanges_Event) error
	grpc.ServerStream
}

type stacksApplyStackChangesServer struct {
	grpc.ServerStream
}

func (x *stacksApplyStackChangesServer) Send(m *ApplyStackChanges_Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Stacks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terraform1.Stacks",
	HandlerType: (*StacksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenStackConfiguration",
			Handler:    _Stacks_OpenStackConfiguration_Handler,
		},
		{
			MethodName: "CloseStackConfiguration",
			Handler:    _Stacks_CloseStackConfiguration_Handler,
		},
		{
			MethodName: "FindStackConfigurationProviders",
			Handler:    _Stacks_FindStackConfigurationProviders_Handler,
		},
		{
			MethodName: "FindStackConfigurationComponents",
			Handler:    _Stacks_FindStackConfigurationComponents_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PlanStackChanges",
			Handler:       _Stacks_PlanStackChanges_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ApplyStackChanges",
			Handler:       _Stacks_ApplyStackChanges_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "terraform1.proto",
}
